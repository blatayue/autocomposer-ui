{
  "type": "File",
  "start": 0,
  "end": 2152,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 65,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 2152,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 65,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "Identifier",
        "start": 83,
        "end": 2115,
        "loc": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 1
          }
        },
        "id": {
          "type": "Identifier",
          "start": 89,
          "end": 107,
          "loc": {
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 4,
              "column": 24
            },
            "identifierName": "AutoComposerMelody"
          },
          "name": "AutoComposerMelody",
          "leadingComments": null
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "start": 108,
          "end": 2115,
          "loc": {
            "start": {
              "line": 4,
              "column": 25
            },
            "end": {
              "line": 62,
              "column": 1
            }
          },
          "body": [
            {
              "type": "ClassMethod",
              "start": 113,
              "end": 219,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 2
                },
                "end": {
                  "line": 9,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 113,
                "end": 124,
                "loc": {
                  "start": {
                    "line": 5,
                    "column": 2
                  },
                  "end": {
                    "line": 5,
                    "column": 13
                  },
                  "identifierName": "constructor"
                },
                "name": "constructor"
              },
              "static": false,
              "kind": "constructor",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 127,
                "end": 219,
                "loc": {
                  "start": {
                    "line": 5,
                    "column": 16
                  },
                  "end": {
                    "line": 9,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 134,
                    "end": 214,
                    "loc": {
                      "start": {
                        "line": 6,
                        "column": 4
                      },
                      "end": {
                        "line": 8,
                        "column": 23
                      }
                    },
                    "expression": {
                      "type": "SequenceExpression",
                      "start": 134,
                      "end": 214,
                      "loc": {
                        "start": {
                          "line": 6,
                          "column": 4
                        },
                        "end": {
                          "line": 8,
                          "column": 23
                        }
                      },
                      "expressions": [
                        {
                          "type": "AssignmentExpression",
                          "start": 134,
                          "end": 162,
                          "loc": {
                            "start": {
                              "line": 6,
                              "column": 4
                            },
                            "end": {
                              "line": 6,
                              "column": 32
                            }
                          },
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "start": 134,
                            "end": 155,
                            "loc": {
                              "start": {
                                "line": 6,
                                "column": 4
                              },
                              "end": {
                                "line": 6,
                                "column": 25
                              }
                            },
                            "object": {
                              "type": "ThisExpression",
                              "start": 134,
                              "end": 138,
                              "loc": {
                                "start": {
                                  "line": 6,
                                  "column": 4
                                },
                                "end": {
                                  "line": 6,
                                  "column": 8
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 139,
                              "end": 155,
                              "loc": {
                                "start": {
                                  "line": 6,
                                  "column": 9
                                },
                                "end": {
                                  "line": 6,
                                  "column": 25
                                },
                                "identifierName": "chordProgression"
                              },
                              "name": "chordProgression"
                            },
                            "computed": false
                          },
                          "right": {
                            "type": "NullLiteral",
                            "start": 158,
                            "end": 162,
                            "loc": {
                              "start": {
                                "line": 6,
                                "column": 28
                              },
                              "end": {
                                "line": 6,
                                "column": 32
                              }
                            }
                          }
                        },
                        {
                          "type": "AssignmentExpression",
                          "start": 169,
                          "end": 188,
                          "loc": {
                            "start": {
                              "line": 7,
                              "column": 4
                            },
                            "end": {
                              "line": 7,
                              "column": 23
                            }
                          },
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "start": 169,
                            "end": 184,
                            "loc": {
                              "start": {
                                "line": 7,
                                "column": 4
                              },
                              "end": {
                                "line": 7,
                                "column": 19
                              }
                            },
                            "object": {
                              "type": "ThisExpression",
                              "start": 169,
                              "end": 173,
                              "loc": {
                                "start": {
                                  "line": 7,
                                  "column": 4
                                },
                                "end": {
                                  "line": 7,
                                  "column": 8
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 174,
                              "end": 184,
                              "loc": {
                                "start": {
                                  "line": 7,
                                  "column": 9
                                },
                                "end": {
                                  "line": 7,
                                  "column": 19
                                },
                                "identifierName": "upperLimit"
                              },
                              "name": "upperLimit"
                            },
                            "computed": false
                          },
                          "right": {
                            "type": "NumericLiteral",
                            "start": 187,
                            "end": 188,
                            "loc": {
                              "start": {
                                "line": 7,
                                "column": 22
                              },
                              "end": {
                                "line": 7,
                                "column": 23
                              }
                            },
                            "extra": {
                              "rawValue": 0,
                              "raw": "0"
                            },
                            "value": 0
                          }
                        },
                        {
                          "type": "AssignmentExpression",
                          "start": 195,
                          "end": 214,
                          "loc": {
                            "start": {
                              "line": 8,
                              "column": 4
                            },
                            "end": {
                              "line": 8,
                              "column": 23
                            }
                          },
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "start": 195,
                            "end": 210,
                            "loc": {
                              "start": {
                                "line": 8,
                                "column": 4
                              },
                              "end": {
                                "line": 8,
                                "column": 19
                              }
                            },
                            "object": {
                              "type": "ThisExpression",
                              "start": 195,
                              "end": 199,
                              "loc": {
                                "start": {
                                  "line": 8,
                                  "column": 4
                                },
                                "end": {
                                  "line": 8,
                                  "column": 8
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 200,
                              "end": 210,
                              "loc": {
                                "start": {
                                  "line": 8,
                                  "column": 9
                                },
                                "end": {
                                  "line": 8,
                                  "column": 19
                                },
                                "identifierName": "lowerLimit"
                              },
                              "name": "lowerLimit"
                            },
                            "computed": false
                          },
                          "right": {
                            "type": "NumericLiteral",
                            "start": 213,
                            "end": 214,
                            "loc": {
                              "start": {
                                "line": 8,
                                "column": 22
                              },
                              "end": {
                                "line": 8,
                                "column": 23
                              }
                            },
                            "extra": {
                              "rawValue": 0,
                              "raw": "0"
                            },
                            "value": 0
                          }
                        }
                      ]
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 227,
                  "end": 604,
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 4
                    },
                    "end": {
                      "line": 17,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 608,
              "end": 681,
              "loc": {
                "start": {
                  "line": 18,
                  "column": 2
                },
                "end": {
                  "line": 20,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 608,
                "end": 628,
                "loc": {
                  "start": {
                    "line": 18,
                    "column": 2
                  },
                  "end": {
                    "line": 18,
                    "column": 22
                  },
                  "identifierName": "getLowestNoteInRange"
                },
                "name": "getLowestNoteInRange",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 629,
                  "end": 633,
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 23
                    },
                    "end": {
                      "line": 18,
                      "column": 27
                    },
                    "identifierName": "note"
                  },
                  "name": "note"
                },
                {
                  "type": "Identifier",
                  "start": 635,
                  "end": 645,
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 29
                    },
                    "end": {
                      "line": 18,
                      "column": 39
                    },
                    "identifierName": "upperLimit"
                  },
                  "name": "upperLimit"
                },
                {
                  "type": "Identifier",
                  "start": 647,
                  "end": 657,
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 41
                    },
                    "end": {
                      "line": 18,
                      "column": 51
                    },
                    "identifierName": "lowerLimit"
                  },
                  "name": "lowerLimit"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 659,
                "end": 681,
                "loc": {
                  "start": {
                    "line": 18,
                    "column": 53
                  },
                  "end": {
                    "line": 20,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 666,
                    "end": 676,
                    "loc": {
                      "start": {
                        "line": 19,
                        "column": 4
                      },
                      "end": {
                        "line": 19,
                        "column": 14
                      }
                    },
                    "argument": {
                      "type": "ArrayExpression",
                      "start": 673,
                      "end": 675,
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 11
                        },
                        "end": {
                          "line": 19,
                          "column": 13
                        }
                      },
                      "elements": []
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 227,
                  "end": 604,
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 4
                    },
                    "end": {
                      "line": 17,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 689,
                  "end": 1054,
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1058,
              "end": 1128,
              "loc": {
                "start": {
                  "line": 29,
                  "column": 2
                },
                "end": {
                  "line": 31,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1058,
                "end": 1074,
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 2
                  },
                  "end": {
                    "line": 29,
                    "column": 18
                  },
                  "identifierName": "getAllChordTones"
                },
                "name": "getAllChordTones",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1075,
                  "end": 1080,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 19
                    },
                    "end": {
                      "line": 29,
                      "column": 24
                    },
                    "identifierName": "chord"
                  },
                  "name": "chord"
                },
                {
                  "type": "Identifier",
                  "start": 1082,
                  "end": 1092,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 26
                    },
                    "end": {
                      "line": 29,
                      "column": 36
                    },
                    "identifierName": "upperLimit"
                  },
                  "name": "upperLimit"
                },
                {
                  "type": "Identifier",
                  "start": 1094,
                  "end": 1104,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 38
                    },
                    "end": {
                      "line": 29,
                      "column": 48
                    },
                    "identifierName": "lowerLimit"
                  },
                  "name": "lowerLimit"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1106,
                "end": 1128,
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 50
                  },
                  "end": {
                    "line": 31,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1113,
                    "end": 1123,
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 4
                      },
                      "end": {
                        "line": 30,
                        "column": 14
                      }
                    },
                    "argument": {
                      "type": "ArrayExpression",
                      "start": 1120,
                      "end": 1122,
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 11
                        },
                        "end": {
                          "line": 30,
                          "column": 13
                        }
                      },
                      "elements": []
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 689,
                  "end": 1054,
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
                  "start": 1136,
                  "end": 1426,
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 4
                    },
                    "end": {
                      "line": 39,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1430,
              "end": 1498,
              "loc": {
                "start": {
                  "line": 40,
                  "column": 2
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1430,
                "end": 1444,
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 2
                  },
                  "end": {
                    "line": 40,
                    "column": 16
                  },
                  "identifierName": "buildChordUnit"
                },
                "name": "buildChordUnit",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1445,
                  "end": 1450,
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 17
                    },
                    "end": {
                      "line": 40,
                      "column": 22
                    },
                    "identifierName": "chord"
                  },
                  "name": "chord"
                },
                {
                  "type": "Identifier",
                  "start": 1452,
                  "end": 1462,
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 24
                    },
                    "end": {
                      "line": 40,
                      "column": 34
                    },
                    "identifierName": "upperLimit"
                  },
                  "name": "upperLimit"
                },
                {
                  "type": "Identifier",
                  "start": 1464,
                  "end": 1474,
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 36
                    },
                    "end": {
                      "line": 40,
                      "column": 46
                    },
                    "identifierName": "lowerLimit"
                  },
                  "name": "lowerLimit"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1476,
                "end": 1498,
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 48
                  },
                  "end": {
                    "line": 42,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1483,
                    "end": 1493,
                    "loc": {
                      "start": {
                        "line": 41,
                        "column": 4
                      },
                      "end": {
                        "line": 41,
                        "column": 14
                      }
                    },
                    "argument": {
                      "type": "ArrayExpression",
                      "start": 1490,
                      "end": 1492,
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 11
                        },
                        "end": {
                          "line": 41,
                          "column": 13
                        }
                      },
                      "elements": []
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
                  "start": 1136,
                  "end": 1426,
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 4
                    },
                    "end": {
                      "line": 39,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
                  "start": 1506,
                  "end": 1733,
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 48,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1737,
              "end": 1792,
              "loc": {
                "start": {
                  "line": 49,
                  "column": 2
                },
                "end": {
                  "line": 51,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1737,
                "end": 1751,
                "loc": {
                  "start": {
                    "line": 49,
                    "column": 2
                  },
                  "end": {
                    "line": 49,
                    "column": 16
                  },
                  "identifierName": "buildChordList"
                },
                "name": "buildChordList",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1752,
                  "end": 1768,
                  "loc": {
                    "start": {
                      "line": 49,
                      "column": 17
                    },
                    "end": {
                      "line": 49,
                      "column": 33
                    },
                    "identifierName": "chordProgression"
                  },
                  "name": "chordProgression"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1770,
                "end": 1792,
                "loc": {
                  "start": {
                    "line": 49,
                    "column": 35
                  },
                  "end": {
                    "line": 51,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1777,
                    "end": 1787,
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 4
                      },
                      "end": {
                        "line": 50,
                        "column": 14
                      }
                    },
                    "argument": {
                      "type": "ArrayExpression",
                      "start": 1784,
                      "end": 1786,
                      "loc": {
                        "start": {
                          "line": 50,
                          "column": 11
                        },
                        "end": {
                          "line": 50,
                          "column": 13
                        }
                      },
                      "elements": []
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
                  "start": 1506,
                  "end": 1733,
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 48,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 1800,
                  "end": 2054,
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 4
                    },
                    "end": {
                      "line": 57,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 2058,
              "end": 2110,
              "loc": {
                "start": {
                  "line": 58,
                  "column": 2
                },
                "end": {
                  "line": 60,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 2058,
                "end": 2069,
                "loc": {
                  "start": {
                    "line": 58,
                    "column": 2
                  },
                  "end": {
                    "line": 58,
                    "column": 13
                  },
                  "identifierName": "getMelodies"
                },
                "name": "getMelodies",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 2070,
                  "end": 2086,
                  "loc": {
                    "start": {
                      "line": 58,
                      "column": 14
                    },
                    "end": {
                      "line": 58,
                      "column": 30
                    },
                    "identifierName": "chordProgression"
                  },
                  "name": "chordProgression"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 2088,
                "end": 2110,
                "loc": {
                  "start": {
                    "line": 58,
                    "column": 32
                  },
                  "end": {
                    "line": 60,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 2095,
                    "end": 2105,
                    "loc": {
                      "start": {
                        "line": 59,
                        "column": 4
                      },
                      "end": {
                        "line": 59,
                        "column": 14
                      }
                    },
                    "argument": {
                      "type": "ArrayExpression",
                      "start": 2102,
                      "end": 2104,
                      "loc": {
                        "start": {
                          "line": 59,
                          "column": 11
                        },
                        "end": {
                          "line": 59,
                          "column": 13
                        }
                      },
                      "elements": []
                    }
                  }
                ],
                "directives": []
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                  "start": 1800,
                  "end": 2054,
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 4
                    },
                    "end": {
                      "line": 57,
                      "column": 6
                    }
                  }
                }
              ]
            }
          ]
        },
        "leadingComments": [],
        "name": "_",
        "trailingComments": []
      },
      {
        "type": "EmptyStatement",
        "start": 2115,
        "end": 2116,
        "loc": {
          "start": {
            "line": 62,
            "column": 1
          },
          "end": {
            "line": 62,
            "column": 2
          }
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2120,
        "end": 2150,
        "loc": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 30
          }
        },
        "declaration": null,
        "specifiers": [
          {
            "type": "ExportSpecifier",
            "start": 2129,
            "end": 2147,
            "loc": {
              "start": {
                "line": 64,
                "column": 9
              },
              "end": {
                "line": 64,
                "column": 27
              }
            },
            "local": {
              "type": "Identifier",
              "start": 2129,
              "end": 2147,
              "loc": {
                "start": {
                  "line": 64,
                  "column": 9
                },
                "end": {
                  "line": 64,
                  "column": 27
                },
                "identifierName": "AutoComposerMelody"
              },
              "name": "AutoComposerMelody"
            },
            "exported": {
              "type": "Identifier",
              "start": 2129,
              "end": 2147,
              "loc": {
                "start": {
                  "line": 64,
                  "column": 9
                },
                "end": {
                  "line": 64,
                  "column": 27
                },
                "identifierName": "AutoComposerMelody"
              },
              "name": "AutoComposerMelody"
            }
          }
        ],
        "source": null
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2120,
        "end": 2150,
        "loc": {
          "start": {
            "line": 64,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 30
          }
        },
        "declaration": {
          "type": "ClassDeclaration",
          "start": 83,
          "end": 2115,
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 89,
            "end": 107,
            "loc": {
              "start": {
                "line": 4,
                "column": 6
              },
              "end": {
                "line": 4,
                "column": 24
              },
              "identifierName": "AutoComposerMelody"
            },
            "name": "AutoComposerMelody",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 108,
            "end": 2115,
            "loc": {
              "start": {
                "line": 4,
                "column": 25
              },
              "end": {
                "line": 62,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 113,
                "end": 219,
                "loc": {
                  "start": {
                    "line": 5,
                    "column": 2
                  },
                  "end": {
                    "line": 9,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 113,
                  "end": 124,
                  "loc": {
                    "start": {
                      "line": 5,
                      "column": 2
                    },
                    "end": {
                      "line": 5,
                      "column": 13
                    },
                    "identifierName": "constructor"
                  },
                  "name": "constructor"
                },
                "static": false,
                "kind": "constructor",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 127,
                  "end": 219,
                  "loc": {
                    "start": {
                      "line": 5,
                      "column": 16
                    },
                    "end": {
                      "line": 9,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 134,
                      "end": 214,
                      "loc": {
                        "start": {
                          "line": 6,
                          "column": 4
                        },
                        "end": {
                          "line": 8,
                          "column": 23
                        }
                      },
                      "expression": {
                        "type": "SequenceExpression",
                        "start": 134,
                        "end": 214,
                        "loc": {
                          "start": {
                            "line": 6,
                            "column": 4
                          },
                          "end": {
                            "line": 8,
                            "column": 23
                          }
                        },
                        "expressions": [
                          {
                            "type": "AssignmentExpression",
                            "start": 134,
                            "end": 162,
                            "loc": {
                              "start": {
                                "line": 6,
                                "column": 4
                              },
                              "end": {
                                "line": 6,
                                "column": 32
                              }
                            },
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "start": 134,
                              "end": 155,
                              "loc": {
                                "start": {
                                  "line": 6,
                                  "column": 4
                                },
                                "end": {
                                  "line": 6,
                                  "column": 25
                                }
                              },
                              "object": {
                                "type": "ThisExpression",
                                "start": 134,
                                "end": 138,
                                "loc": {
                                  "start": {
                                    "line": 6,
                                    "column": 4
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 8
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 139,
                                "end": 155,
                                "loc": {
                                  "start": {
                                    "line": 6,
                                    "column": 9
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 25
                                  },
                                  "identifierName": "chordProgression"
                                },
                                "name": "chordProgression"
                              },
                              "computed": false
                            },
                            "right": {
                              "type": "NullLiteral",
                              "start": 158,
                              "end": 162,
                              "loc": {
                                "start": {
                                  "line": 6,
                                  "column": 28
                                },
                                "end": {
                                  "line": 6,
                                  "column": 32
                                }
                              }
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "start": 169,
                            "end": 188,
                            "loc": {
                              "start": {
                                "line": 7,
                                "column": 4
                              },
                              "end": {
                                "line": 7,
                                "column": 23
                              }
                            },
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "start": 169,
                              "end": 184,
                              "loc": {
                                "start": {
                                  "line": 7,
                                  "column": 4
                                },
                                "end": {
                                  "line": 7,
                                  "column": 19
                                }
                              },
                              "object": {
                                "type": "ThisExpression",
                                "start": 169,
                                "end": 173,
                                "loc": {
                                  "start": {
                                    "line": 7,
                                    "column": 4
                                  },
                                  "end": {
                                    "line": 7,
                                    "column": 8
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 174,
                                "end": 184,
                                "loc": {
                                  "start": {
                                    "line": 7,
                                    "column": 9
                                  },
                                  "end": {
                                    "line": 7,
                                    "column": 19
                                  },
                                  "identifierName": "upperLimit"
                                },
                                "name": "upperLimit"
                              },
                              "computed": false
                            },
                            "right": {
                              "type": "NumericLiteral",
                              "start": 187,
                              "end": 188,
                              "loc": {
                                "start": {
                                  "line": 7,
                                  "column": 22
                                },
                                "end": {
                                  "line": 7,
                                  "column": 23
                                }
                              },
                              "extra": {
                                "rawValue": 0,
                                "raw": "0"
                              },
                              "value": 0
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "start": 195,
                            "end": 214,
                            "loc": {
                              "start": {
                                "line": 8,
                                "column": 4
                              },
                              "end": {
                                "line": 8,
                                "column": 23
                              }
                            },
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "start": 195,
                              "end": 210,
                              "loc": {
                                "start": {
                                  "line": 8,
                                  "column": 4
                                },
                                "end": {
                                  "line": 8,
                                  "column": 19
                                }
                              },
                              "object": {
                                "type": "ThisExpression",
                                "start": 195,
                                "end": 199,
                                "loc": {
                                  "start": {
                                    "line": 8,
                                    "column": 4
                                  },
                                  "end": {
                                    "line": 8,
                                    "column": 8
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "start": 200,
                                "end": 210,
                                "loc": {
                                  "start": {
                                    "line": 8,
                                    "column": 9
                                  },
                                  "end": {
                                    "line": 8,
                                    "column": 19
                                  },
                                  "identifierName": "lowerLimit"
                                },
                                "name": "lowerLimit"
                              },
                              "computed": false
                            },
                            "right": {
                              "type": "NumericLiteral",
                              "start": 213,
                              "end": 214,
                              "loc": {
                                "start": {
                                  "line": 8,
                                  "column": 22
                                },
                                "end": {
                                  "line": 8,
                                  "column": 23
                                }
                              },
                              "extra": {
                                "rawValue": 0,
                                "raw": "0"
                              },
                              "value": 0
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 227,
                    "end": 604,
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 4
                      },
                      "end": {
                        "line": 17,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 608,
                "end": 681,
                "loc": {
                  "start": {
                    "line": 18,
                    "column": 2
                  },
                  "end": {
                    "line": 20,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 608,
                  "end": 628,
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 2
                    },
                    "end": {
                      "line": 18,
                      "column": 22
                    },
                    "identifierName": "getLowestNoteInRange"
                  },
                  "name": "getLowestNoteInRange",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 629,
                    "end": 633,
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 23
                      },
                      "end": {
                        "line": 18,
                        "column": 27
                      },
                      "identifierName": "note"
                    },
                    "name": "note"
                  },
                  {
                    "type": "Identifier",
                    "start": 635,
                    "end": 645,
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 29
                      },
                      "end": {
                        "line": 18,
                        "column": 39
                      },
                      "identifierName": "upperLimit"
                    },
                    "name": "upperLimit"
                  },
                  {
                    "type": "Identifier",
                    "start": 647,
                    "end": 657,
                    "loc": {
                      "start": {
                        "line": 18,
                        "column": 41
                      },
                      "end": {
                        "line": 18,
                        "column": 51
                      },
                      "identifierName": "lowerLimit"
                    },
                    "name": "lowerLimit"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 659,
                  "end": 681,
                  "loc": {
                    "start": {
                      "line": 18,
                      "column": 53
                    },
                    "end": {
                      "line": 20,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 666,
                      "end": 676,
                      "loc": {
                        "start": {
                          "line": 19,
                          "column": 4
                        },
                        "end": {
                          "line": 19,
                          "column": 14
                        }
                      },
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 673,
                        "end": 675,
                        "loc": {
                          "start": {
                            "line": 19,
                            "column": 11
                          },
                          "end": {
                            "line": 19,
                            "column": 13
                          }
                        },
                        "elements": []
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 227,
                    "end": 604,
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 4
                      },
                      "end": {
                        "line": 17,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 689,
                    "end": 1054,
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 4
                      },
                      "end": {
                        "line": 28,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1058,
                "end": 1128,
                "loc": {
                  "start": {
                    "line": 29,
                    "column": 2
                  },
                  "end": {
                    "line": 31,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1058,
                  "end": 1074,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 2
                    },
                    "end": {
                      "line": 29,
                      "column": 18
                    },
                    "identifierName": "getAllChordTones"
                  },
                  "name": "getAllChordTones",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1075,
                    "end": 1080,
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 19
                      },
                      "end": {
                        "line": 29,
                        "column": 24
                      },
                      "identifierName": "chord"
                    },
                    "name": "chord"
                  },
                  {
                    "type": "Identifier",
                    "start": 1082,
                    "end": 1092,
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 26
                      },
                      "end": {
                        "line": 29,
                        "column": 36
                      },
                      "identifierName": "upperLimit"
                    },
                    "name": "upperLimit"
                  },
                  {
                    "type": "Identifier",
                    "start": 1094,
                    "end": 1104,
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 38
                      },
                      "end": {
                        "line": 29,
                        "column": 48
                      },
                      "identifierName": "lowerLimit"
                    },
                    "name": "lowerLimit"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1106,
                  "end": 1128,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 50
                    },
                    "end": {
                      "line": 31,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1113,
                      "end": 1123,
                      "loc": {
                        "start": {
                          "line": 30,
                          "column": 4
                        },
                        "end": {
                          "line": 30,
                          "column": 14
                        }
                      },
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 1120,
                        "end": 1122,
                        "loc": {
                          "start": {
                            "line": 30,
                            "column": 11
                          },
                          "end": {
                            "line": 30,
                            "column": 13
                          }
                        },
                        "elements": []
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 689,
                    "end": 1054,
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 4
                      },
                      "end": {
                        "line": 28,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
                    "start": 1136,
                    "end": 1426,
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 4
                      },
                      "end": {
                        "line": 39,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1430,
                "end": 1498,
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 2
                  },
                  "end": {
                    "line": 42,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1430,
                  "end": 1444,
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 2
                    },
                    "end": {
                      "line": 40,
                      "column": 16
                    },
                    "identifierName": "buildChordUnit"
                  },
                  "name": "buildChordUnit",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1445,
                    "end": 1450,
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 17
                      },
                      "end": {
                        "line": 40,
                        "column": 22
                      },
                      "identifierName": "chord"
                    },
                    "name": "chord"
                  },
                  {
                    "type": "Identifier",
                    "start": 1452,
                    "end": 1462,
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 24
                      },
                      "end": {
                        "line": 40,
                        "column": 34
                      },
                      "identifierName": "upperLimit"
                    },
                    "name": "upperLimit"
                  },
                  {
                    "type": "Identifier",
                    "start": 1464,
                    "end": 1474,
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 36
                      },
                      "end": {
                        "line": 40,
                        "column": 46
                      },
                      "identifierName": "lowerLimit"
                    },
                    "name": "lowerLimit"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1476,
                  "end": 1498,
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 48
                    },
                    "end": {
                      "line": 42,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1483,
                      "end": 1493,
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 4
                        },
                        "end": {
                          "line": 41,
                          "column": 14
                        }
                      },
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 1490,
                        "end": 1492,
                        "loc": {
                          "start": {
                            "line": 41,
                            "column": 11
                          },
                          "end": {
                            "line": 41,
                            "column": 13
                          }
                        },
                        "elements": []
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
                    "start": 1136,
                    "end": 1426,
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 4
                      },
                      "end": {
                        "line": 39,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
                    "start": 1506,
                    "end": 1733,
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 4
                      },
                      "end": {
                        "line": 48,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1737,
                "end": 1792,
                "loc": {
                  "start": {
                    "line": 49,
                    "column": 2
                  },
                  "end": {
                    "line": 51,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1737,
                  "end": 1751,
                  "loc": {
                    "start": {
                      "line": 49,
                      "column": 2
                    },
                    "end": {
                      "line": 49,
                      "column": 16
                    },
                    "identifierName": "buildChordList"
                  },
                  "name": "buildChordList",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1752,
                    "end": 1768,
                    "loc": {
                      "start": {
                        "line": 49,
                        "column": 17
                      },
                      "end": {
                        "line": 49,
                        "column": 33
                      },
                      "identifierName": "chordProgression"
                    },
                    "name": "chordProgression"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1770,
                  "end": 1792,
                  "loc": {
                    "start": {
                      "line": 49,
                      "column": 35
                    },
                    "end": {
                      "line": 51,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1777,
                      "end": 1787,
                      "loc": {
                        "start": {
                          "line": 50,
                          "column": 4
                        },
                        "end": {
                          "line": 50,
                          "column": 14
                        }
                      },
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 1784,
                        "end": 1786,
                        "loc": {
                          "start": {
                            "line": 50,
                            "column": 11
                          },
                          "end": {
                            "line": 50,
                            "column": 13
                          }
                        },
                        "elements": []
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
                    "start": 1506,
                    "end": 1733,
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 4
                      },
                      "end": {
                        "line": 48,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 1800,
                    "end": 2054,
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 4
                      },
                      "end": {
                        "line": 57,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 2058,
                "end": 2110,
                "loc": {
                  "start": {
                    "line": 58,
                    "column": 2
                  },
                  "end": {
                    "line": 60,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2058,
                  "end": 2069,
                  "loc": {
                    "start": {
                      "line": 58,
                      "column": 2
                    },
                    "end": {
                      "line": 58,
                      "column": 13
                    },
                    "identifierName": "getMelodies"
                  },
                  "name": "getMelodies",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 2070,
                    "end": 2086,
                    "loc": {
                      "start": {
                        "line": 58,
                        "column": 14
                      },
                      "end": {
                        "line": 58,
                        "column": 30
                      },
                      "identifierName": "chordProgression"
                    },
                    "name": "chordProgression"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 2088,
                  "end": 2110,
                  "loc": {
                    "start": {
                      "line": 58,
                      "column": 32
                    },
                    "end": {
                      "line": 60,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 2095,
                      "end": 2105,
                      "loc": {
                        "start": {
                          "line": 59,
                          "column": 4
                        },
                        "end": {
                          "line": 59,
                          "column": 14
                        }
                      },
                      "argument": {
                        "type": "ArrayExpression",
                        "start": 2102,
                        "end": 2104,
                        "loc": {
                          "start": {
                            "line": 59,
                            "column": 11
                          },
                          "end": {
                            "line": 59,
                            "column": 13
                          }
                        },
                        "elements": []
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
                    "start": 1800,
                    "end": 2054,
                    "loc": {
                      "start": {
                        "line": 53,
                        "column": 4
                      },
                      "end": {
                        "line": 57,
                        "column": 6
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * AutoComposerMelody - creates melodies from a given chord progression\r\n ",
              "start": 0,
              "end": 81,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 0
                },
                "end": {
                  "line": 3,
                  "column": 3
                }
              }
            }
          ],
          "__PseudoExport__": false,
          "trailingComments": []
        },
        "specifiers": null,
        "source": null,
        "leadingComments": null
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * AutoComposerMelody - creates melodies from a given chord progression\r\n ",
      "start": 0,
      "end": 81,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 227,
      "end": 604,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 17,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 689,
      "end": 1054,
      "loc": {
        "start": {
          "line": 22,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
      "start": 1136,
      "end": 1426,
      "loc": {
        "start": {
          "line": 33,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
      "start": 1506,
      "end": 1733,
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 1800,
      "end": 2054,
      "loc": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * AutoComposerMelody - creates melodies from a given chord progression\r\n ",
      "start": 0,
      "end": 81,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 83,
      "end": 88,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "AutoComposerMelody",
      "start": 89,
      "end": 107,
      "loc": {
        "start": {
          "line": 4,
          "column": 6
        },
        "end": {
          "line": 4,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 108,
      "end": 109,
      "loc": {
        "start": {
          "line": 4,
          "column": 25
        },
        "end": {
          "line": 4,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "constructor",
      "start": 113,
      "end": 124,
      "loc": {
        "start": {
          "line": 5,
          "column": 2
        },
        "end": {
          "line": 5,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 124,
      "end": 125,
      "loc": {
        "start": {
          "line": 5,
          "column": 13
        },
        "end": {
          "line": 5,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 125,
      "end": 126,
      "loc": {
        "start": {
          "line": 5,
          "column": 14
        },
        "end": {
          "line": 5,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 127,
      "end": 128,
      "loc": {
        "start": {
          "line": 5,
          "column": 16
        },
        "end": {
          "line": 5,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 134,
      "end": 138,
      "loc": {
        "start": {
          "line": 6,
          "column": 4
        },
        "end": {
          "line": 6,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 138,
      "end": 139,
      "loc": {
        "start": {
          "line": 6,
          "column": 8
        },
        "end": {
          "line": 6,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chordProgression",
      "start": 139,
      "end": 155,
      "loc": {
        "start": {
          "line": 6,
          "column": 9
        },
        "end": {
          "line": 6,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 156,
      "end": 157,
      "loc": {
        "start": {
          "line": 6,
          "column": 26
        },
        "end": {
          "line": 6,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "null",
        "keyword": "null",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "null",
      "start": 158,
      "end": 162,
      "loc": {
        "start": {
          "line": 6,
          "column": 28
        },
        "end": {
          "line": 6,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 162,
      "end": 163,
      "loc": {
        "start": {
          "line": 6,
          "column": 32
        },
        "end": {
          "line": 6,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 169,
      "end": 173,
      "loc": {
        "start": {
          "line": 7,
          "column": 4
        },
        "end": {
          "line": 7,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 173,
      "end": 174,
      "loc": {
        "start": {
          "line": 7,
          "column": 8
        },
        "end": {
          "line": 7,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "upperLimit",
      "start": 174,
      "end": 184,
      "loc": {
        "start": {
          "line": 7,
          "column": 9
        },
        "end": {
          "line": 7,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 185,
      "end": 186,
      "loc": {
        "start": {
          "line": 7,
          "column": 20
        },
        "end": {
          "line": 7,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 187,
      "end": 188,
      "loc": {
        "start": {
          "line": 7,
          "column": 22
        },
        "end": {
          "line": 7,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 188,
      "end": 189,
      "loc": {
        "start": {
          "line": 7,
          "column": 23
        },
        "end": {
          "line": 7,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 195,
      "end": 199,
      "loc": {
        "start": {
          "line": 8,
          "column": 4
        },
        "end": {
          "line": 8,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 199,
      "end": 200,
      "loc": {
        "start": {
          "line": 8,
          "column": 8
        },
        "end": {
          "line": 8,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lowerLimit",
      "start": 200,
      "end": 210,
      "loc": {
        "start": {
          "line": 8,
          "column": 9
        },
        "end": {
          "line": 8,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 211,
      "end": 212,
      "loc": {
        "start": {
          "line": 8,
          "column": 20
        },
        "end": {
          "line": 8,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 213,
      "end": 214,
      "loc": {
        "start": {
          "line": 8,
          "column": 22
        },
        "end": {
          "line": 8,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 218,
      "end": 219,
      "loc": {
        "start": {
          "line": 9,
          "column": 2
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 227,
      "end": 604,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 17,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getLowestNoteInRange",
      "start": 608,
      "end": 628,
      "loc": {
        "start": {
          "line": 18,
          "column": 2
        },
        "end": {
          "line": 18,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 628,
      "end": 629,
      "loc": {
        "start": {
          "line": 18,
          "column": 22
        },
        "end": {
          "line": 18,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "note",
      "start": 629,
      "end": 633,
      "loc": {
        "start": {
          "line": 18,
          "column": 23
        },
        "end": {
          "line": 18,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 633,
      "end": 634,
      "loc": {
        "start": {
          "line": 18,
          "column": 27
        },
        "end": {
          "line": 18,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "upperLimit",
      "start": 635,
      "end": 645,
      "loc": {
        "start": {
          "line": 18,
          "column": 29
        },
        "end": {
          "line": 18,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 645,
      "end": 646,
      "loc": {
        "start": {
          "line": 18,
          "column": 39
        },
        "end": {
          "line": 18,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lowerLimit",
      "start": 647,
      "end": 657,
      "loc": {
        "start": {
          "line": 18,
          "column": 41
        },
        "end": {
          "line": 18,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 657,
      "end": 658,
      "loc": {
        "start": {
          "line": 18,
          "column": 51
        },
        "end": {
          "line": 18,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 659,
      "end": 660,
      "loc": {
        "start": {
          "line": 18,
          "column": 53
        },
        "end": {
          "line": 18,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 666,
      "end": 672,
      "loc": {
        "start": {
          "line": 19,
          "column": 4
        },
        "end": {
          "line": 19,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 673,
      "end": 674,
      "loc": {
        "start": {
          "line": 19,
          "column": 11
        },
        "end": {
          "line": 19,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 674,
      "end": 675,
      "loc": {
        "start": {
          "line": 19,
          "column": 12
        },
        "end": {
          "line": 19,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 675,
      "end": 676,
      "loc": {
        "start": {
          "line": 19,
          "column": 13
        },
        "end": {
          "line": 19,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 680,
      "end": 681,
      "loc": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 689,
      "end": 1054,
      "loc": {
        "start": {
          "line": 22,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getAllChordTones",
      "start": 1058,
      "end": 1074,
      "loc": {
        "start": {
          "line": 29,
          "column": 2
        },
        "end": {
          "line": 29,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1074,
      "end": 1075,
      "loc": {
        "start": {
          "line": 29,
          "column": 18
        },
        "end": {
          "line": 29,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chord",
      "start": 1075,
      "end": 1080,
      "loc": {
        "start": {
          "line": 29,
          "column": 19
        },
        "end": {
          "line": 29,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1080,
      "end": 1081,
      "loc": {
        "start": {
          "line": 29,
          "column": 24
        },
        "end": {
          "line": 29,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "upperLimit",
      "start": 1082,
      "end": 1092,
      "loc": {
        "start": {
          "line": 29,
          "column": 26
        },
        "end": {
          "line": 29,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1092,
      "end": 1093,
      "loc": {
        "start": {
          "line": 29,
          "column": 36
        },
        "end": {
          "line": 29,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lowerLimit",
      "start": 1094,
      "end": 1104,
      "loc": {
        "start": {
          "line": 29,
          "column": 38
        },
        "end": {
          "line": 29,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1104,
      "end": 1105,
      "loc": {
        "start": {
          "line": 29,
          "column": 48
        },
        "end": {
          "line": 29,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1106,
      "end": 1107,
      "loc": {
        "start": {
          "line": 29,
          "column": 50
        },
        "end": {
          "line": 29,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1113,
      "end": 1119,
      "loc": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 30,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1120,
      "end": 1121,
      "loc": {
        "start": {
          "line": 30,
          "column": 11
        },
        "end": {
          "line": 30,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1121,
      "end": 1122,
      "loc": {
        "start": {
          "line": 30,
          "column": 12
        },
        "end": {
          "line": 30,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1122,
      "end": 1123,
      "loc": {
        "start": {
          "line": 30,
          "column": 13
        },
        "end": {
          "line": 30,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1127,
      "end": 1128,
      "loc": {
        "start": {
          "line": 31,
          "column": 2
        },
        "end": {
          "line": 31,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {ChordUnit}\r\n    ",
      "start": 1136,
      "end": 1426,
      "loc": {
        "start": {
          "line": 33,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "buildChordUnit",
      "start": 1430,
      "end": 1444,
      "loc": {
        "start": {
          "line": 40,
          "column": 2
        },
        "end": {
          "line": 40,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1444,
      "end": 1445,
      "loc": {
        "start": {
          "line": 40,
          "column": 16
        },
        "end": {
          "line": 40,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chord",
      "start": 1445,
      "end": 1450,
      "loc": {
        "start": {
          "line": 40,
          "column": 17
        },
        "end": {
          "line": 40,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1450,
      "end": 1451,
      "loc": {
        "start": {
          "line": 40,
          "column": 22
        },
        "end": {
          "line": 40,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "upperLimit",
      "start": 1452,
      "end": 1462,
      "loc": {
        "start": {
          "line": 40,
          "column": 24
        },
        "end": {
          "line": 40,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1462,
      "end": 1463,
      "loc": {
        "start": {
          "line": 40,
          "column": 34
        },
        "end": {
          "line": 40,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lowerLimit",
      "start": 1464,
      "end": 1474,
      "loc": {
        "start": {
          "line": 40,
          "column": 36
        },
        "end": {
          "line": 40,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1474,
      "end": 1475,
      "loc": {
        "start": {
          "line": 40,
          "column": 46
        },
        "end": {
          "line": 40,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1476,
      "end": 1477,
      "loc": {
        "start": {
          "line": 40,
          "column": 48
        },
        "end": {
          "line": 40,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1483,
      "end": 1489,
      "loc": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1490,
      "end": 1491,
      "loc": {
        "start": {
          "line": 41,
          "column": 11
        },
        "end": {
          "line": 41,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1491,
      "end": 1492,
      "loc": {
        "start": {
          "line": 41,
          "column": 12
        },
        "end": {
          "line": 41,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1492,
      "end": 1493,
      "loc": {
        "start": {
          "line": 41,
          "column": 13
        },
        "end": {
          "line": 41,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1497,
      "end": 1498,
      "loc": {
        "start": {
          "line": 42,
          "column": 2
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    ",
      "start": 1506,
      "end": 1733,
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 48,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "buildChordList",
      "start": 1737,
      "end": 1751,
      "loc": {
        "start": {
          "line": 49,
          "column": 2
        },
        "end": {
          "line": 49,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1751,
      "end": 1752,
      "loc": {
        "start": {
          "line": 49,
          "column": 16
        },
        "end": {
          "line": 49,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chordProgression",
      "start": 1752,
      "end": 1768,
      "loc": {
        "start": {
          "line": 49,
          "column": 17
        },
        "end": {
          "line": 49,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1768,
      "end": 1769,
      "loc": {
        "start": {
          "line": 49,
          "column": 33
        },
        "end": {
          "line": 49,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1770,
      "end": 1771,
      "loc": {
        "start": {
          "line": 49,
          "column": 35
        },
        "end": {
          "line": 49,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1777,
      "end": 1783,
      "loc": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1784,
      "end": 1785,
      "loc": {
        "start": {
          "line": 50,
          "column": 11
        },
        "end": {
          "line": 50,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1785,
      "end": 1786,
      "loc": {
        "start": {
          "line": 50,
          "column": 12
        },
        "end": {
          "line": 50,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1786,
      "end": 1787,
      "loc": {
        "start": {
          "line": 50,
          "column": 13
        },
        "end": {
          "line": 50,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1791,
      "end": 1792,
      "loc": {
        "start": {
          "line": 51,
          "column": 2
        },
        "end": {
          "line": 51,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - value given by the user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    ",
      "start": 1800,
      "end": 2054,
      "loc": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getMelodies",
      "start": 2058,
      "end": 2069,
      "loc": {
        "start": {
          "line": 58,
          "column": 2
        },
        "end": {
          "line": 58,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2069,
      "end": 2070,
      "loc": {
        "start": {
          "line": 58,
          "column": 13
        },
        "end": {
          "line": 58,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "chordProgression",
      "start": 2070,
      "end": 2086,
      "loc": {
        "start": {
          "line": 58,
          "column": 14
        },
        "end": {
          "line": 58,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2086,
      "end": 2087,
      "loc": {
        "start": {
          "line": 58,
          "column": 30
        },
        "end": {
          "line": 58,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2088,
      "end": 2089,
      "loc": {
        "start": {
          "line": 58,
          "column": 32
        },
        "end": {
          "line": 58,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2095,
      "end": 2101,
      "loc": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2102,
      "end": 2103,
      "loc": {
        "start": {
          "line": 59,
          "column": 11
        },
        "end": {
          "line": 59,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2103,
      "end": 2104,
      "loc": {
        "start": {
          "line": 59,
          "column": 12
        },
        "end": {
          "line": 59,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2104,
      "end": 2105,
      "loc": {
        "start": {
          "line": 59,
          "column": 13
        },
        "end": {
          "line": 59,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2109,
      "end": 2110,
      "loc": {
        "start": {
          "line": 60,
          "column": 2
        },
        "end": {
          "line": 60,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2114,
      "end": 2115,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2115,
      "end": 2116,
      "loc": {
        "start": {
          "line": 62,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2120,
      "end": 2126,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2127,
      "end": 2128,
      "loc": {
        "start": {
          "line": 64,
          "column": 7
        },
        "end": {
          "line": 64,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "AutoComposerMelody",
      "start": 2129,
      "end": 2147,
      "loc": {
        "start": {
          "line": 64,
          "column": 9
        },
        "end": {
          "line": 64,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2148,
      "end": 2149,
      "loc": {
        "start": {
          "line": 64,
          "column": 28
        },
        "end": {
          "line": 64,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2149,
      "end": 2150,
      "loc": {
        "start": {
          "line": 64,
          "column": 29
        },
        "end": {
          "line": 64,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2152,
      "end": 2152,
      "loc": {
        "start": {
          "line": 65,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 0
        }
      }
    }
  ]
}