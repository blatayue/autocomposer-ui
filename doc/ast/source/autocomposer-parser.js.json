{
  "type": "File",
  "start": 0,
  "end": 1410,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 49,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1410,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 49,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "Identifier",
        "start": 195,
        "end": 1374,
        "loc": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 1
          }
        },
        "id": {
          "type": "Identifier",
          "start": 201,
          "end": 219,
          "loc": {
            "start": {
              "line": 7,
              "column": 6
            },
            "end": {
              "line": 7,
              "column": 24
            },
            "identifierName": "AutoComposerParser"
          },
          "name": "AutoComposerParser",
          "leadingComments": null
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "start": 220,
          "end": 1374,
          "loc": {
            "start": {
              "line": 7,
              "column": 25
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "body": [
            {
              "type": "ClassMethod",
              "start": 225,
              "end": 255,
              "loc": {
                "start": {
                  "line": 8,
                  "column": 2
                },
                "end": {
                  "line": 10,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 225,
                "end": 236,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 2
                  },
                  "end": {
                    "line": 8,
                    "column": 13
                  },
                  "identifierName": "constructor"
                },
                "name": "constructor"
              },
              "static": false,
              "kind": "constructor",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 239,
                "end": 255,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 16
                  },
                  "end": {
                    "line": 10,
                    "column": 3
                  }
                },
                "body": [],
                "directives": [],
                "leadingComments": null,
                "trailingComments": [
                  {
                    "type": "CommentLine",
                    "value": "",
                    "start": 248,
                    "end": 250,
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 6
                      },
                      "end": {
                        "line": 9,
                        "column": 8
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
                    "start": 261,
                    "end": 504,
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 4
                      },
                      "end": {
                        "line": 15,
                        "column": 6
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "ClassMethod",
              "start": 508,
              "end": 552,
              "loc": {
                "start": {
                  "line": 16,
                  "column": 2
                },
                "end": {
                  "line": 18,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 508,
                "end": 519,
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 2
                  },
                  "end": {
                    "line": 16,
                    "column": 13
                  },
                  "identifierName": "isValidText"
                },
                "name": "isValidText",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 520,
                  "end": 525,
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 14
                    },
                    "end": {
                      "line": 16,
                      "column": 19
                    },
                    "identifierName": "input"
                  },
                  "name": "input"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 527,
                "end": 552,
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 21
                  },
                  "end": {
                    "line": 18,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 534,
                    "end": 547,
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 4
                      },
                      "end": {
                        "line": 17,
                        "column": 17
                      }
                    },
                    "argument": {
                      "type": "BooleanLiteral",
                      "start": 541,
                      "end": 546,
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 11
                        },
                        "end": {
                          "line": 17,
                          "column": 16
                        }
                      },
                      "value": false
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
                  "start": 261,
                  "end": 504,
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 4
                    },
                    "end": {
                      "line": 15,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
                  "start": 560,
                  "end": 759,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 4
                    },
                    "end": {
                      "line": 24,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 763,
              "end": 841,
              "loc": {
                "start": {
                  "line": 25,
                  "column": 2
                },
                "end": {
                  "line": 27,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 763,
                "end": 792,
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 2
                  },
                  "end": {
                    "line": 25,
                    "column": 31
                  },
                  "identifierName": "convertAsciiAccidentalsToHtml"
                },
                "name": "convertAsciiAccidentalsToHtml",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 793,
                  "end": 798,
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 32
                    },
                    "end": {
                      "line": 25,
                      "column": 37
                    },
                    "identifierName": "input"
                  },
                  "name": "input"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 800,
                "end": 841,
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 39
                  },
                  "end": {
                    "line": 27,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 807,
                    "end": 836,
                    "loc": {
                      "start": {
                        "line": 26,
                        "column": 4
                      },
                      "end": {
                        "line": 26,
                        "column": 33
                      }
                    },
                    "argument": {
                      "type": "StringLiteral",
                      "start": 814,
                      "end": 835,
                      "loc": {
                        "start": {
                          "line": 26,
                          "column": 11
                        },
                        "end": {
                          "line": 26,
                          "column": 32
                        }
                      },
                      "extra": {
                        "rawValue": "not implemented yet",
                        "raw": "\"not implemented yet\""
                      },
                      "value": "not implemented yet"
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
                  "start": 560,
                  "end": 759,
                  "loc": {
                    "start": {
                      "line": 20,
                      "column": 4
                    },
                    "end": {
                      "line": 24,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
                  "start": 849,
                  "end": 1032,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 4
                    },
                    "end": {
                      "line": 33,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1036,
              "end": 1114,
              "loc": {
                "start": {
                  "line": 34,
                  "column": 2
                },
                "end": {
                  "line": 36,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1036,
                "end": 1065,
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 2
                  },
                  "end": {
                    "line": 34,
                    "column": 31
                  },
                  "identifierName": "convertAsciiAccidentalsToText"
                },
                "name": "convertAsciiAccidentalsToText",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1066,
                  "end": 1071,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 32
                    },
                    "end": {
                      "line": 34,
                      "column": 37
                    },
                    "identifierName": "input"
                  },
                  "name": "input"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1073,
                "end": 1114,
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 39
                  },
                  "end": {
                    "line": 36,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1080,
                    "end": 1109,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 4
                      },
                      "end": {
                        "line": 35,
                        "column": 33
                      }
                    },
                    "argument": {
                      "type": "StringLiteral",
                      "start": 1087,
                      "end": 1108,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 11
                        },
                        "end": {
                          "line": 35,
                          "column": 32
                        }
                      },
                      "extra": {
                        "rawValue": "not implemented yet",
                        "raw": "\"not implemented yet\""
                      },
                      "value": "not implemented yet"
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
                  "start": 849,
                  "end": 1032,
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 4
                    },
                    "end": {
                      "line": 33,
                      "column": 6
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
                  "start": 1122,
                  "end": 1293,
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 4
                    },
                    "end": {
                      "line": 42,
                      "column": 6
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 1297,
              "end": 1371,
              "loc": {
                "start": {
                  "line": 43,
                  "column": 2
                },
                "end": {
                  "line": 45,
                  "column": 3
                }
              },
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 1297,
                "end": 1322,
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 2
                  },
                  "end": {
                    "line": 43,
                    "column": 27
                  },
                  "identifierName": "convertAccidentalsToAscii"
                },
                "name": "convertAccidentalsToAscii",
                "leadingComments": null
              },
              "static": false,
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 1323,
                  "end": 1328,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 28
                    },
                    "end": {
                      "line": 43,
                      "column": 33
                    },
                    "identifierName": "input"
                  },
                  "name": "input"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 1330,
                "end": 1371,
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 35
                  },
                  "end": {
                    "line": 45,
                    "column": 3
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 1337,
                    "end": 1366,
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 4
                      },
                      "end": {
                        "line": 44,
                        "column": 33
                      }
                    },
                    "argument": {
                      "type": "StringLiteral",
                      "start": 1344,
                      "end": 1365,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 11
                        },
                        "end": {
                          "line": 44,
                          "column": 32
                        }
                      },
                      "extra": {
                        "rawValue": "not implemented yet",
                        "raw": "\"not implemented yet\""
                      },
                      "value": "not implemented yet"
                    }
                  }
                ],
                "directives": []
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
                  "start": 1122,
                  "end": 1293,
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 4
                    },
                    "end": {
                      "line": 42,
                      "column": 6
                    }
                  }
                }
              ]
            }
          ]
        },
        "leadingComments": [],
        "name": "_",
        "trailingComments": []
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1378,
        "end": 1408,
        "loc": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 30
          }
        },
        "declaration": null,
        "specifiers": [
          {
            "type": "ExportSpecifier",
            "start": 1387,
            "end": 1405,
            "loc": {
              "start": {
                "line": 48,
                "column": 9
              },
              "end": {
                "line": 48,
                "column": 27
              }
            },
            "local": {
              "type": "Identifier",
              "start": 1387,
              "end": 1405,
              "loc": {
                "start": {
                  "line": 48,
                  "column": 9
                },
                "end": {
                  "line": 48,
                  "column": 27
                },
                "identifierName": "AutoComposerParser"
              },
              "name": "AutoComposerParser"
            },
            "exported": {
              "type": "Identifier",
              "start": 1387,
              "end": 1405,
              "loc": {
                "start": {
                  "line": 48,
                  "column": 9
                },
                "end": {
                  "line": 48,
                  "column": 27
                },
                "identifierName": "AutoComposerParser"
              },
              "name": "AutoComposerParser"
            }
          }
        ],
        "source": null
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1378,
        "end": 1408,
        "loc": {
          "start": {
            "line": 48,
            "column": 0
          },
          "end": {
            "line": 48,
            "column": 30
          }
        },
        "declaration": {
          "type": "ClassDeclaration",
          "start": 195,
          "end": 1374,
          "loc": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 201,
            "end": 219,
            "loc": {
              "start": {
                "line": 7,
                "column": 6
              },
              "end": {
                "line": 7,
                "column": 24
              },
              "identifierName": "AutoComposerParser"
            },
            "name": "AutoComposerParser",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 220,
            "end": 1374,
            "loc": {
              "start": {
                "line": 7,
                "column": 25
              },
              "end": {
                "line": 46,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 225,
                "end": 255,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 2
                  },
                  "end": {
                    "line": 10,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 225,
                  "end": 236,
                  "loc": {
                    "start": {
                      "line": 8,
                      "column": 2
                    },
                    "end": {
                      "line": 8,
                      "column": 13
                    },
                    "identifierName": "constructor"
                  },
                  "name": "constructor"
                },
                "static": false,
                "kind": "constructor",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 239,
                  "end": 255,
                  "loc": {
                    "start": {
                      "line": 8,
                      "column": 16
                    },
                    "end": {
                      "line": 10,
                      "column": 3
                    }
                  },
                  "body": [],
                  "directives": [],
                  "leadingComments": null,
                  "trailingComments": [
                    {
                      "type": "CommentLine",
                      "value": "",
                      "start": 248,
                      "end": 250,
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 6
                        },
                        "end": {
                          "line": 9,
                          "column": 8
                        }
                      }
                    },
                    {
                      "type": "CommentBlock",
                      "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
                      "start": 261,
                      "end": 504,
                      "loc": {
                        "start": {
                          "line": 11,
                          "column": 4
                        },
                        "end": {
                          "line": 15,
                          "column": 6
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "ClassMethod",
                "start": 508,
                "end": 552,
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 2
                  },
                  "end": {
                    "line": 18,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 508,
                  "end": 519,
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 2
                    },
                    "end": {
                      "line": 16,
                      "column": 13
                    },
                    "identifierName": "isValidText"
                  },
                  "name": "isValidText",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 520,
                    "end": 525,
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 14
                      },
                      "end": {
                        "line": 16,
                        "column": 19
                      },
                      "identifierName": "input"
                    },
                    "name": "input"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 527,
                  "end": 552,
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 21
                    },
                    "end": {
                      "line": 18,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 534,
                      "end": 547,
                      "loc": {
                        "start": {
                          "line": 17,
                          "column": 4
                        },
                        "end": {
                          "line": 17,
                          "column": 17
                        }
                      },
                      "argument": {
                        "type": "BooleanLiteral",
                        "start": 541,
                        "end": 546,
                        "loc": {
                          "start": {
                            "line": 17,
                            "column": 11
                          },
                          "end": {
                            "line": 17,
                            "column": 16
                          }
                        },
                        "value": false
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
                    "start": 261,
                    "end": 504,
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 4
                      },
                      "end": {
                        "line": 15,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
                    "start": 560,
                    "end": 759,
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 4
                      },
                      "end": {
                        "line": 24,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 763,
                "end": 841,
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 2
                  },
                  "end": {
                    "line": 27,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 763,
                  "end": 792,
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 2
                    },
                    "end": {
                      "line": 25,
                      "column": 31
                    },
                    "identifierName": "convertAsciiAccidentalsToHtml"
                  },
                  "name": "convertAsciiAccidentalsToHtml",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 793,
                    "end": 798,
                    "loc": {
                      "start": {
                        "line": 25,
                        "column": 32
                      },
                      "end": {
                        "line": 25,
                        "column": 37
                      },
                      "identifierName": "input"
                    },
                    "name": "input"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 800,
                  "end": 841,
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 39
                    },
                    "end": {
                      "line": 27,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 807,
                      "end": 836,
                      "loc": {
                        "start": {
                          "line": 26,
                          "column": 4
                        },
                        "end": {
                          "line": 26,
                          "column": 33
                        }
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "start": 814,
                        "end": 835,
                        "loc": {
                          "start": {
                            "line": 26,
                            "column": 11
                          },
                          "end": {
                            "line": 26,
                            "column": 32
                          }
                        },
                        "extra": {
                          "rawValue": "not implemented yet",
                          "raw": "\"not implemented yet\""
                        },
                        "value": "not implemented yet"
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
                    "start": 560,
                    "end": 759,
                    "loc": {
                      "start": {
                        "line": 20,
                        "column": 4
                      },
                      "end": {
                        "line": 24,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
                    "start": 849,
                    "end": 1032,
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 4
                      },
                      "end": {
                        "line": 33,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1036,
                "end": 1114,
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 2
                  },
                  "end": {
                    "line": 36,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1036,
                  "end": 1065,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 2
                    },
                    "end": {
                      "line": 34,
                      "column": 31
                    },
                    "identifierName": "convertAsciiAccidentalsToText"
                  },
                  "name": "convertAsciiAccidentalsToText",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1066,
                    "end": 1071,
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 32
                      },
                      "end": {
                        "line": 34,
                        "column": 37
                      },
                      "identifierName": "input"
                    },
                    "name": "input"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1073,
                  "end": 1114,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 39
                    },
                    "end": {
                      "line": 36,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1080,
                      "end": 1109,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 4
                        },
                        "end": {
                          "line": 35,
                          "column": 33
                        }
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "start": 1087,
                        "end": 1108,
                        "loc": {
                          "start": {
                            "line": 35,
                            "column": 11
                          },
                          "end": {
                            "line": 35,
                            "column": 32
                          }
                        },
                        "extra": {
                          "rawValue": "not implemented yet",
                          "raw": "\"not implemented yet\""
                        },
                        "value": "not implemented yet"
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
                    "start": 849,
                    "end": 1032,
                    "loc": {
                      "start": {
                        "line": 29,
                        "column": 4
                      },
                      "end": {
                        "line": 33,
                        "column": 6
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
                    "start": 1122,
                    "end": 1293,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 4
                      },
                      "end": {
                        "line": 42,
                        "column": 6
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1297,
                "end": 1371,
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 2
                  },
                  "end": {
                    "line": 45,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1297,
                  "end": 1322,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 2
                    },
                    "end": {
                      "line": 43,
                      "column": 27
                    },
                    "identifierName": "convertAccidentalsToAscii"
                  },
                  "name": "convertAccidentalsToAscii",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1323,
                    "end": 1328,
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 28
                      },
                      "end": {
                        "line": 43,
                        "column": 33
                      },
                      "identifierName": "input"
                    },
                    "name": "input"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1330,
                  "end": 1371,
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 35
                    },
                    "end": {
                      "line": 45,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1337,
                      "end": 1366,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 4
                        },
                        "end": {
                          "line": 44,
                          "column": 33
                        }
                      },
                      "argument": {
                        "type": "StringLiteral",
                        "start": 1344,
                        "end": 1365,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 11
                          },
                          "end": {
                            "line": 44,
                            "column": 32
                          }
                        },
                        "extra": {
                          "rawValue": "not implemented yet",
                          "raw": "\"not implemented yet\""
                        },
                        "value": "not implemented yet"
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
                    "start": 1122,
                    "end": 1293,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 4
                      },
                      "end": {
                        "line": 42,
                        "column": 6
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * AutoComposerParser - determines if user input represents a valid note/chord.\r\n * Also handles conversions between proper accidental signs and ASCII accidentals like \"b\" or \"#\".\r\n ",
              "start": 4,
              "end": 193,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 6,
                  "column": 3
                }
              }
            }
          ],
          "__PseudoExport__": false,
          "trailingComments": []
        },
        "specifiers": null,
        "source": null,
        "leadingComments": null
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * AutoComposerParser - determines if user input represents a valid note/chord.\r\n * Also handles conversions between proper accidental signs and ASCII accidentals like \"b\" or \"#\".\r\n ",
      "start": 4,
      "end": 193,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "",
      "start": 248,
      "end": 250,
      "loc": {
        "start": {
          "line": 9,
          "column": 6
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
      "start": 261,
      "end": 504,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
      "start": 560,
      "end": 759,
      "loc": {
        "start": {
          "line": 20,
          "column": 4
        },
        "end": {
          "line": 24,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
      "start": 849,
      "end": 1032,
      "loc": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 6
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
      "start": 1122,
      "end": 1293,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * AutoComposerParser - determines if user input represents a valid note/chord.\r\n * Also handles conversions between proper accidental signs and ASCII accidentals like \"b\" or \"#\".\r\n ",
      "start": 4,
      "end": 193,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 195,
      "end": 200,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "AutoComposerParser",
      "start": 201,
      "end": 219,
      "loc": {
        "start": {
          "line": 7,
          "column": 6
        },
        "end": {
          "line": 7,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 220,
      "end": 221,
      "loc": {
        "start": {
          "line": 7,
          "column": 25
        },
        "end": {
          "line": 7,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "constructor",
      "start": 225,
      "end": 236,
      "loc": {
        "start": {
          "line": 8,
          "column": 2
        },
        "end": {
          "line": 8,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 236,
      "end": 237,
      "loc": {
        "start": {
          "line": 8,
          "column": 13
        },
        "end": {
          "line": 8,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 237,
      "end": 238,
      "loc": {
        "start": {
          "line": 8,
          "column": 14
        },
        "end": {
          "line": 8,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 239,
      "end": 240,
      "loc": {
        "start": {
          "line": 8,
          "column": 16
        },
        "end": {
          "line": 8,
          "column": 17
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "",
      "start": 248,
      "end": 250,
      "loc": {
        "start": {
          "line": 9,
          "column": 6
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 254,
      "end": 255,
      "loc": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    ",
      "start": 261,
      "end": 504,
      "loc": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isValidText",
      "start": 508,
      "end": 519,
      "loc": {
        "start": {
          "line": 16,
          "column": 2
        },
        "end": {
          "line": 16,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 519,
      "end": 520,
      "loc": {
        "start": {
          "line": 16,
          "column": 13
        },
        "end": {
          "line": 16,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "input",
      "start": 520,
      "end": 525,
      "loc": {
        "start": {
          "line": 16,
          "column": 14
        },
        "end": {
          "line": 16,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 525,
      "end": 526,
      "loc": {
        "start": {
          "line": 16,
          "column": 19
        },
        "end": {
          "line": 16,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 527,
      "end": 528,
      "loc": {
        "start": {
          "line": 16,
          "column": 21
        },
        "end": {
          "line": 16,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 534,
      "end": 540,
      "loc": {
        "start": {
          "line": 17,
          "column": 4
        },
        "end": {
          "line": 17,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 541,
      "end": 546,
      "loc": {
        "start": {
          "line": 17,
          "column": 11
        },
        "end": {
          "line": 17,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 546,
      "end": 547,
      "loc": {
        "start": {
          "line": 17,
          "column": 16
        },
        "end": {
          "line": 17,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 551,
      "end": 552,
      "loc": {
        "start": {
          "line": 18,
          "column": 2
        },
        "end": {
          "line": 18,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    ",
      "start": 560,
      "end": 759,
      "loc": {
        "start": {
          "line": 20,
          "column": 4
        },
        "end": {
          "line": 24,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "convertAsciiAccidentalsToHtml",
      "start": 763,
      "end": 792,
      "loc": {
        "start": {
          "line": 25,
          "column": 2
        },
        "end": {
          "line": 25,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 792,
      "end": 793,
      "loc": {
        "start": {
          "line": 25,
          "column": 31
        },
        "end": {
          "line": 25,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "input",
      "start": 793,
      "end": 798,
      "loc": {
        "start": {
          "line": 25,
          "column": 32
        },
        "end": {
          "line": 25,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 798,
      "end": 799,
      "loc": {
        "start": {
          "line": 25,
          "column": 37
        },
        "end": {
          "line": 25,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 800,
      "end": 801,
      "loc": {
        "start": {
          "line": 25,
          "column": 39
        },
        "end": {
          "line": 25,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 807,
      "end": 813,
      "loc": {
        "start": {
          "line": 26,
          "column": 4
        },
        "end": {
          "line": 26,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "not implemented yet",
      "start": 814,
      "end": 835,
      "loc": {
        "start": {
          "line": 26,
          "column": 11
        },
        "end": {
          "line": 26,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 835,
      "end": 836,
      "loc": {
        "start": {
          "line": 26,
          "column": 32
        },
        "end": {
          "line": 26,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 840,
      "end": 841,
      "loc": {
        "start": {
          "line": 27,
          "column": 2
        },
        "end": {
          "line": 27,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    ",
      "start": 849,
      "end": 1032,
      "loc": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "convertAsciiAccidentalsToText",
      "start": 1036,
      "end": 1065,
      "loc": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1065,
      "end": 1066,
      "loc": {
        "start": {
          "line": 34,
          "column": 31
        },
        "end": {
          "line": 34,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "input",
      "start": 1066,
      "end": 1071,
      "loc": {
        "start": {
          "line": 34,
          "column": 32
        },
        "end": {
          "line": 34,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1071,
      "end": 1072,
      "loc": {
        "start": {
          "line": 34,
          "column": 37
        },
        "end": {
          "line": 34,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1073,
      "end": 1074,
      "loc": {
        "start": {
          "line": 34,
          "column": 39
        },
        "end": {
          "line": 34,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1080,
      "end": 1086,
      "loc": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 35,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "not implemented yet",
      "start": 1087,
      "end": 1108,
      "loc": {
        "start": {
          "line": 35,
          "column": 11
        },
        "end": {
          "line": 35,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1108,
      "end": 1109,
      "loc": {
        "start": {
          "line": 35,
          "column": 32
        },
        "end": {
          "line": 35,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1113,
      "end": 1114,
      "loc": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 36,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    ",
      "start": 1122,
      "end": 1293,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "convertAccidentalsToAscii",
      "start": 1297,
      "end": 1322,
      "loc": {
        "start": {
          "line": 43,
          "column": 2
        },
        "end": {
          "line": 43,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1322,
      "end": 1323,
      "loc": {
        "start": {
          "line": 43,
          "column": 27
        },
        "end": {
          "line": 43,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "input",
      "start": 1323,
      "end": 1328,
      "loc": {
        "start": {
          "line": 43,
          "column": 28
        },
        "end": {
          "line": 43,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1328,
      "end": 1329,
      "loc": {
        "start": {
          "line": 43,
          "column": 33
        },
        "end": {
          "line": 43,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1330,
      "end": 1331,
      "loc": {
        "start": {
          "line": 43,
          "column": 35
        },
        "end": {
          "line": 43,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1337,
      "end": 1343,
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "not implemented yet",
      "start": 1344,
      "end": 1365,
      "loc": {
        "start": {
          "line": 44,
          "column": 11
        },
        "end": {
          "line": 44,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1365,
      "end": 1366,
      "loc": {
        "start": {
          "line": 44,
          "column": 32
        },
        "end": {
          "line": 44,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1370,
      "end": 1371,
      "loc": {
        "start": {
          "line": 45,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1373,
      "end": 1374,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 46,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1378,
      "end": 1384,
      "loc": {
        "start": {
          "line": 48,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1385,
      "end": 1386,
      "loc": {
        "start": {
          "line": 48,
          "column": 7
        },
        "end": {
          "line": 48,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "AutoComposerParser",
      "start": 1387,
      "end": 1405,
      "loc": {
        "start": {
          "line": 48,
          "column": 9
        },
        "end": {
          "line": 48,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1406,
      "end": 1407,
      "loc": {
        "start": {
          "line": 48,
          "column": 28
        },
        "end": {
          "line": 48,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1407,
      "end": 1408,
      "loc": {
        "start": {
          "line": 48,
          "column": 29
        },
        "end": {
          "line": 48,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1410,
      "end": 1410,
      "loc": {
        "start": {
          "line": 49,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 0
        }
      }
    }
  ]
}