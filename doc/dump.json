[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/app-main.js",
    "content": "var React = require('react');\r\nvar ReactDOM = require('react-dom');\r\n\r\nvar AutoComposerData = require('./autocomposer-data');\r\nvar AcData = new AutoComposerData.AutoComposerData();\r\n\r\nvar AutoComposerMelody = require('./autocomposer-melody');\r\nvar AcMelody = new AutoComposerMelody.AutoComposerMelody();\r\n\r\nvar AutoComposerParser = require('./autocomposer-parser');\r\nvar AcParser = new AutoComposerParser.AutoComposerParser();\r\n\r\nfunction AcInputException(message) {\r\n   this.message = message;\r\n   this.name = 'AcInputException';\r\n}\r\n\r\nclass HelpPanel extends React.Component {\r\n  render() {\r\n    if(!this.props.isHidden) {\r\n      return (\r\n        <div id=\"help-panel\" className=\"autocomposer-panel\">\r\n          <h2>Help!</h2>\r\n          <p>\r\n            How to use this web app:\r\n            <ol>\r\n              <li>Enter a chord progression in the text box.</li>\r\n              <li>Click the \"Generate Melodies\" button</li>\r\n              <li>Squeal in delight, as the promised melodies are shown on the screen.</li>\r\n            </ol>\r\n          </p>\r\n          <h2>Technical Info</h2>\r\n          <p>\r\n            Default range is Bb3 to B5. Smoothness = total distance between the notes in the melody (in semitones). Range = distance between lowest note and highest note (in semitones).\r\n            <br/>\r\n            Melodies are filtered by a few rules:\r\n            <ul>\r\n              <li>Range must be no greater than one octave</li>\r\n            </ul>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass OutputPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    var melodiesExist = this.props.melodyUnitList[0] ? true : false;\r\n\r\n    if(melodiesExist && this.props.melodyUnitList[0].chordProgression === nextProps.melodyUnitList[0].chordProgression) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.VexTabDiv.Div.start();\r\n  }\r\n\r\n  createVexTab(arrChords, arrMelody) {\r\n    var vtString, pitchClass;\r\n    var vexTabText = \"options scale=0.9 space=5 font-size=15 font-face=Times\\n\";\r\n    vexTabText += \"tabstave\\n\";\r\n    vexTabText += \"notation=true tablature=false\\n\";\r\n    vexTabText += \"notes :w \";\r\n\r\n    arrMelody.forEach(function(melodyNote) {\r\n      // Turns a note name like \"C#4\" into \"C#/4 |\"\r\n      // Or \"Bb4\" into \"B@/4 |\"\r\n      // VexTab notation sure is odd.\r\n      pitchClass = melodyNote.slice(0, -1);\r\n      pitchClass.replace(\"b\", \"@\");\r\n\r\n      vtString = pitchClass + \"/\"+ melodyNote.slice(-1) + \" | \";\r\n      vexTabText += vtString;\r\n    });\r\n\r\n    vexTabText = vexTabText.slice(0, - 3) + \"\\n\";\r\n    vexTabText += \"text :w, \";\r\n\r\n    arrChords.forEach(function(chordSymbol) {\r\n      vtString = chordSymbol + \", |, \";\r\n      vexTabText += vtString;\r\n    });\r\n\r\n    vexTabText = vexTabText.slice(0, - 5);\r\n\r\n    console.debug(vexTabText);\r\n\r\n    return vexTabText;\r\n  }\r\n\r\n  createMelodyRows() {\r\n    var melodyUnitList = this.props.melodyUnitList;\r\n    melodyUnitList.sort(function(a, b) {\r\n      return a.smoothness - b.smoothness;\r\n    });\r\n\r\n    var melodyRows = [];\r\n\r\n    for(var i = 0; i < melodyUnitList.length; i++) {\r\n      melodyRows.push(\r\n        <tr key={\"melody\" + i} className=\"ac-melody-row\">\r\n          <td>\r\n            <div className=\"vex-tabdiv\">\r\n              {this.createVexTab(melodyUnitList[i].chordProgression, melodyUnitList[i].melodyNotes)}\r\n            </div>\r\n          </td>\r\n          <td>{melodyUnitList[i].smoothness}</td>\r\n          <td>{melodyUnitList[i].range}</td>\r\n          <td>{melodyUnitList[i].contour}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return melodyRows;\r\n  }\r\n\r\n  createMelodyTable() {\r\n    console.debug('[OutputPanel.createMelodyTable()] creating table...');\r\n    return(\r\n      <table id=\"ac-melody-output\">\r\n        <thead>\r\n          <tr>\r\n            <th>Melody</th>\r\n            <th>Smoothness</th>\r\n            <th>Range</th>\r\n            <th>Contour</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.createMelodyRows()}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.isHidden) {\r\n      return (\r\n        <div id=\"output-panel\" className=\"autocomposer-panel\">\r\n          <h2>Melodies!</h2>\r\n          {this.createMelodyTable()}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass DebugPanel extends React.Component {\r\n  render() {\r\n    if(!this.props.isHidden) {\r\n      return (\r\n        <div id=\"r-debug-panel\" className=\"r-component\">\r\n          <h3>Debug Info</h3>\r\n          <pre>\r\n            {this.props.debugData}\r\n          </pre>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <input type=\"button\" className=\"ac-input button\" id={this.props.inputKey} value={this.props.inputLabel} onClick={this.props.onClick} />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjToggleButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentState: props.initialState === \"true\"\r\n    };\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.setState({currentState: !this.state.currentState});\r\n    this.props.onClickHandler(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"button\" className=\"ac-input button\" id={this.props.inputKey} value={this.props.inputLabel} data-state-key={this.props.inputKey} data-current-state={this.state.currentState} onClick={(e) => this.handleClick(e)} />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjTextField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor={this.props.inputKey}>{this.props.inputLabel}</label>\r\n        <input id={this.props.inputKey} name={this.props.inputKey} data-state-key={this.props.inputKey} className=\"ac-input textfield\" type=\"text\" value={this.props.value} onChange={this.props.onChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjTextArea extends React.Component {\r\n  render() {\r\n    var labelElement;\r\n    if(this.props.inputLabel) {\r\n      labelElement = <label htmlFor={this.props.inputKey}>{this.props.inputLabel}</label>\r\n    } else {\r\n      labelElement = \"\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {labelElement}\r\n        <textarea id={this.props.inputKey} name={this.props.inputKey} data-state-key={this.props.inputKey} className=\"ac-input textarea\" value={this.props.value} placeholder={this.props.placeholder} onChange={this.props.onChange} rows=\"1\" cols=\"50\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjCheckbox extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ac-input checkbox\">\r\n        <label htmlFor={this.props.inputKey}>{this.props.inputLabel}</label>\r\n        <input id={this.props.inputKey} name={this.props.inputKey} data-state-key={this.props.inputKey} type=\"checkbox\" checked={this.props.isChecked} onChange={this.props.onChange}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjRadioSet extends React.Component {\r\n  createRadioItems() {\r\n    let items = [];\r\n    var totalOptions = this.props.options;\r\n\r\n    for (var k in totalOptions) {\r\n      if (totalOptions.hasOwnProperty(k)) {\r\n        items.push(<label key={\"label-\" + k} >{totalOptions[k]} <input key={k} id={this.props.inputKey} name={this.props.inputKey} className=\"ac-input radio\" data-state-key={this.props.inputKey} type=\"radio\" value={k}  onChange={this.props.onChange} /> </label>);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"ac-radioset\">\r\n        <fieldset>\r\n          <legend>{this.props.inputLabel}</legend>\r\n          {this.createRadioItems()}\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass RjSelect extends React.Component {\r\n  createSelectItems() {\r\n    let items = [];\r\n    var totalOptions = this.props.options;\r\n\r\n    for (var k in totalOptions) {\r\n      if (totalOptions.hasOwnProperty(k)) {\r\n        // alert(\"Key is \" + key + \", value is\" + totalOptions[key]);\r\n        items.push(<option key={k} value={k}>{totalOptions[k]}</option>);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"ac-input select\">\r\n        <label htmlFor={this.props.inputKey}>{this.props.inputLabel}</label>\r\n        <select id={this.props.inputKey} name={this.props.inputKey} data-state-key={this.props.inputKey} onChange={this.props.onChange}>\r\n          {this.createSelectItems()}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass ControlPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text1: 'text one init',\r\n      text2: 'text two init',\r\n      chk1: true,\r\n      chk2: false,\r\n      hideDebug: false,\r\n      btn1: true\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n\r\n    var stateObj = function() {\r\n      var stateKey = this.target.dataset[\"stateKey\"];\r\n      var returnObj = {};\r\n\r\n      if(this.target.type === \"checkbox\") {\r\n        returnObj[stateKey] = this.target.checked;\r\n      } else if(this.target.type === \"button\") {\r\n        returnObj[stateKey] = this.target.dataset[\"currentState\"] === \"true\";\r\n      } else {\r\n        returnObj[stateKey] = this.target.value;\r\n      }\r\n\r\n      console.debug('[handleChange] stateKey=' + stateKey + ', this.target.value=' + this.target.value);\r\n\r\n      return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState(stateObj);\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.isHidden) {\r\n      var testSelectOptions = [];\r\n      testSelectOptions['opt1'] = 'Something 1';\r\n      testSelectOptions['opt2'] = 'Something 2';\r\n      testSelectOptions['opt3'] = 'Something 3';\r\n      testSelectOptions['opt4'] = 'Something 4';\r\n\r\n      return (\r\n\r\n        <div className=\"r-component\">\r\n          <h2>Controls</h2>\r\n\r\n          <RjTextField inputKey=\"text1\" inputLabel=\"For text1\" value={this.state.text1} onChange={this.handleChange} />\r\n          <RjTextField inputKey=\"text2\" inputLabel=\"For text2\" value={this.state.text2} onChange={this.handleChange} />\r\n\r\n          <RjCheckbox inputKey=\"hideDebug\" inputLabel=\"Hide Debug Panel?\" isChecked={this.state.hideDebug} onChange={this.handleChange} />\r\n          <RjCheckbox inputKey=\"chk1\" inputLabel=\"Testing chk1\" isChecked={this.state.chk1} onChange={this.handleChange} />\r\n\r\n          <RjSelect inputKey=\"select1\" inputLabel=\"For select1\" value={this.state.select1} onChange={this.handleChange} options={testSelectOptions} />\r\n\r\n          <RjRadioSet inputKey=\"rad1\" inputLabel=\"For rad1\" value={this.state.rad1} onChange={this.handleChange} options={testSelectOptions} />\r\n\r\n          <RjToggleButton inputKey=\"btn1\" inputLabel=\"For btn1\" initialState={this.state.btn1} onClickHandler={this.handleChange} />\r\n\r\n          <DebugPanel isHidden={this.state.hideDebug} debugData={JSON.stringify(this.state, null, 2)}/>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass ErrorMessage extends React.Component {\r\n  render() {\r\n    if(!this.props.isHidden) {\r\n      return(\r\n        <div id=\"error-message\">\r\n          <h2>Error</h2>\r\n          <p>\r\n            {this.props.errorMessage}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass AutoComposer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hideHelp: true,\r\n      hideControls: true,\r\n      hideOutput: true,\r\n      hideError: true,\r\n      debugMode: false,\r\n      chordProgressionRaw: \"\",\r\n      chordProgressionPlaceholder: AcData.INITIAL_PROGRESSION,\r\n      melodyUnitList: [],\r\n      errorMessage: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.generateMelodies = this.generateMelodies.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    var stateObj = function() {\r\n      var stateKey = this.target.dataset[\"stateKey\"];\r\n      var returnObj = {};\r\n      var debugMessage;\r\n\r\n      if(this.target.type === \"checkbox\") {\r\n        returnObj[stateKey] = this.target.checked;\r\n        debugMessage = '[handleChange] stateKey=' + stateKey + ', this.target.value=' + this.target.value;\r\n      } else if(this.target.type === \"button\") {\r\n        returnObj[stateKey] = this.target.dataset[\"currentState\"] === \"true\";\r\n        debugMessage = '[handleChange] stateKey=' + stateKey + ', this.target.dataset[\\'currentState\\']' + this.target.dataset[\"currentState\"];\r\n      } else {\r\n        returnObj[stateKey] = this.target.value;\r\n        debugMessage = '[handleChange] stateKey=' + stateKey + ', this.target.value=' + this.target.value;\r\n      }\r\n\r\n      console.debug(debugMessage);\r\n\r\n      return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState(stateObj);\r\n  }\r\n\r\n  generateMelodies(event) {\r\n      var chordProgression = this.state.chordProgressionRaw.trim().split(\" \");\r\n\r\n      try {\r\n      if(this.state.chordProgressionRaw == null || this.state.chordProgressionRaw == \"\") {\r\n        throw new AcInputException('Chord input appears to be empty!');\r\n      }\r\n\r\n      chordProgression.forEach(function(currentChordInput) {\r\n        if(!AcParser.isValidText(currentChordInput)) {\r\n          throw new AcInputException('Chord input \\'' + currentChordInput + '\\' is not formatted properly! You should check the chord dictionary in the Help! section.');\r\n        }\r\n      });\r\n\r\n      this.setState({hideError: true, hideOutput: false, melodyUnitList: AcMelody.getMelodies(chordProgression)});\r\n    } catch(exc) {\r\n      console.debug(\"exc=\" + JSON.stringify(exc, 2));\r\n      var errorMsg = exc.message + \" Error Type: [\" + exc.name + \"]\";\r\n      this.setState({hideError: false, errorMessage: errorMsg});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"r-app-container\" className=\"r-component\">\r\n        <h2>Chord Progression</h2>\r\n        <RjTextArea inputKey=\"chordProgressionRaw\" value={this.state.chordProgressionRaw} placeholder={this.state.chordProgressionPlaceholder} onChange={this.handleChange} />\r\n\r\n        <RjToggleButton inputKey=\"hideHelp\" inputLabel=\"Help/Info\" initialState={this.state.hideHelp} onClickHandler={this.handleChange} />\r\n        <RjToggleButton inputKey=\"hideControls\" inputLabel=\"Settings\" initialState={this.state.hideControls} onClickHandler={this.handleChange} />\r\n        <RjButton inputKey=\"generateMelodies\" inputLabel=\"Generate Melodies\" onClick={this.generateMelodies} />\r\n\r\n        <ErrorMessage isHidden={this.state.hideError} errorMessage={this.state.errorMessage} />\r\n        <ControlPanel isHidden={this.state.hideControls} />\r\n        <HelpPanel isHidden={this.state.hideHelp} />\r\n        <OutputPanel isHidden={this.state.hideOutput} melodyUnitList={this.state.melodyUnitList} />\r\n\r\n        <DebugPanel isHidden={!this.state.debugMode} debugData={JSON.stringify(this.state, null, 2)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<AutoComposer />, document.getElementById('react-root'));\r\n",
    "static": true,
    "longname": "src/app-main.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "React",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~React",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "ReactDOM",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~ReactDOM",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "AutoComposerData",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AutoComposerData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "AcData",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AcData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "AutoComposerMelody",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AutoComposerMelody",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "name": "AcMelody",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AcMelody",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "AutoComposerParser",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AutoComposerParser",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "name": "AcParser",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AcParser",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "function",
    "name": "AcInputException",
    "memberof": "src/app-main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/app-main.js~AcInputException",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 10,
    "kind": "class",
    "name": "HelpPanel",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~HelpPanel",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~HelpPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~HelpPanel#render",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "class",
    "name": "OutputPanel",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~OutputPanel",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 13,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#constructor",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "shouldComponentUpdate",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#shouldComponentUpdate",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "nextProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "nextState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "componentDidUpdate",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#componentDidUpdate",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "createVexTab",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#createVexTab",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arrChords",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrMelody",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "createMelodyRows",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#createMelodyRows",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "createMelodyTable",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#createMelodyTable",
    "access": null,
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~OutputPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~OutputPanel#render",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "DebugPanel",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~DebugPanel",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~DebugPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~DebugPanel#render",
    "access": null,
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "class",
    "name": "RjButton",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjButton",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 23,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjButton#render",
    "access": null,
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "class",
    "name": "RjToggleButton",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjToggleButton",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 25,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/app-main.js~RjToggleButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjToggleButton#constructor",
    "access": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "state",
    "memberof": "src/app-main.js~RjToggleButton",
    "static": false,
    "longname": "src/app-main.js~RjToggleButton#state",
    "access": null,
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"currentState\": *}"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "handleClick",
    "memberof": "src/app-main.js~RjToggleButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjToggleButton#handleClick",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjToggleButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjToggleButton#render",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "class",
    "name": "RjTextField",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjTextField",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjTextField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjTextField#render",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "class",
    "name": "RjTextArea",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjTextArea",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 32,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjTextArea",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjTextArea#render",
    "access": null,
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "class",
    "name": "RjCheckbox",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjCheckbox",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 34,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjCheckbox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjCheckbox#render",
    "access": null,
    "description": null,
    "lineNumber": 249,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "class",
    "name": "RjRadioSet",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjRadioSet",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 261,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "createRadioItems",
    "memberof": "src/app-main.js~RjRadioSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjRadioSet#createRadioItems",
    "access": null,
    "description": null,
    "lineNumber": 262,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjRadioSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjRadioSet#render",
    "access": null,
    "description": null,
    "lineNumber": 275,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "class",
    "name": "RjSelect",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~RjSelect",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 289,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 39,
    "kind": "method",
    "name": "createSelectItems",
    "memberof": "src/app-main.js~RjSelect",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjSelect#createSelectItems",
    "access": null,
    "description": null,
    "lineNumber": 290,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~RjSelect",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~RjSelect#render",
    "access": null,
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "class",
    "name": "ControlPanel",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~ControlPanel",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 42,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/app-main.js~ControlPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~ControlPanel#constructor",
    "access": null,
    "description": null,
    "lineNumber": 319,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "state",
    "memberof": "src/app-main.js~ControlPanel",
    "static": false,
    "longname": "src/app-main.js~ControlPanel#state",
    "access": null,
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"text1\": string, \"text2\": string, \"chk1\": boolean, \"chk2\": *, \"hideDebug\": *, \"btn1\": boolean}"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "handleChange",
    "memberof": "src/app-main.js~ControlPanel",
    "static": false,
    "longname": "src/app-main.js~ControlPanel#handleChange",
    "access": null,
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "handleChange",
    "memberof": "src/app-main.js~ControlPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~ControlPanel#handleChange",
    "access": null,
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~ControlPanel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~ControlPanel#render",
    "access": null,
    "description": null,
    "lineNumber": 355,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "class",
    "name": "ErrorMessage",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~ErrorMessage",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 391,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 48,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~ErrorMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~ErrorMessage#render",
    "access": null,
    "description": null,
    "lineNumber": 392,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AutoComposer",
    "memberof": "src/app-main.js",
    "static": true,
    "longname": "src/app-main.js~AutoComposer",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/app-main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 410,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "React~React.Component"
    ]
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/app-main.js~AutoComposer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~AutoComposer#constructor",
    "access": null,
    "description": null,
    "lineNumber": 411,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "state",
    "memberof": "src/app-main.js~AutoComposer",
    "static": false,
    "longname": "src/app-main.js~AutoComposer#state",
    "access": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"hideHelp\": boolean, \"hideControls\": boolean, \"hideOutput\": boolean, \"hideError\": boolean, \"debugMode\": *, \"chordProgressionRaw\": *, \"chordProgressionPlaceholder\": *, \"melodyUnitList\": *, \"errorMessage\": *}"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "handleChange",
    "memberof": "src/app-main.js~AutoComposer",
    "static": false,
    "longname": "src/app-main.js~AutoComposer#handleChange",
    "access": null,
    "description": null,
    "lineNumber": 426,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "generateMelodies",
    "memberof": "src/app-main.js~AutoComposer",
    "static": false,
    "longname": "src/app-main.js~AutoComposer#generateMelodies",
    "access": null,
    "description": null,
    "lineNumber": 427,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "handleChange",
    "memberof": "src/app-main.js~AutoComposer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~AutoComposer#handleChange",
    "access": null,
    "description": null,
    "lineNumber": 430,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "generateMelodies",
    "memberof": "src/app-main.js~AutoComposer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~AutoComposer#generateMelodies",
    "access": null,
    "description": null,
    "lineNumber": 455,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "render",
    "memberof": "src/app-main.js~AutoComposer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/app-main.js~AutoComposer#render",
    "access": null,
    "description": null,
    "lineNumber": 477,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/autocomposer-data.js",
    "content": "var range = require('tonal-range')\r\n\r\n/**\r\n * Encapsulates data and musical logic to be used by the application\r\n */\r\nclass AutoComposerData {\r\n  /**\r\n  * Plain constructor.\r\n  */\r\n  constructor() {\r\n    this.DEFAULT_LOWER_LIMIT = \"Bb3\",\r\n    this.DEFAULT_UPPER_LIMIT = \"B5\",\r\n\r\n    this.ACCOMPANIMENT_LOWER_LIMIT = \"G2\",\r\n    this.ACCOMPANIMENT_UPPER_LIMIT = \"A3\",\r\n\r\n    this.BASS_LOWER_LIMIT = \"E1\",\r\n    this.BASS_UPPER_LIMIT = \"F2\",\r\n\r\n    this.INITIAL_PROGRESSION = \"G Em C D\"\r\n  }\r\n\r\n  /**\r\n  * Filters out melodies that have a range larger than an octave.\r\n  * @param {string} melodyString - String representing the melody.\r\n  * @return {boolean} - Returns false if the melody has a range larger than one octave. Returns true otherwise.\r\n  */\r\n  filterMelodyRange(melodyString) {\r\n    var totalRange = range.numeric(melodyString);\r\n    var highest = Math.max.apply(null, totalRange);\r\n    var lowest = Math.min.apply(null, totalRange);\r\n\r\n    return highest - lowest <= 12;\r\n  }\r\n};\r\n\r\nexports.AutoComposerData = AutoComposerData;\r\n",
    "static": true,
    "longname": "src/autocomposer-data.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "range",
    "memberof": "src/autocomposer-data.js",
    "static": true,
    "longname": "src/autocomposer-data.js~range",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-data.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "class",
    "name": "AutoComposerData",
    "memberof": "src/autocomposer-data.js",
    "static": true,
    "longname": "src/autocomposer-data.js~AutoComposerData",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/autocomposer-data.js",
    "importStyle": "{AutoComposerData}",
    "description": "Encapsulates data and musical logic to be used by the application",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/autocomposer-data.js~AutoComposerData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-data.js~AutoComposerData#constructor",
    "access": null,
    "description": "Plain constructor.",
    "lineNumber": 10,
    "params": []
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "filterMelodyRange",
    "memberof": "src/autocomposer-data.js~AutoComposerData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-data.js~AutoComposerData#filterMelodyRange",
    "access": null,
    "description": "Filters out melodies that have a range larger than an octave.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "melodyString",
        "description": "String representing the melody."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns false if the melody has a range larger than one octave. Returns true otherwise."
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/autocomposer-melody.js",
    "content": "var tonal = require('tonal');\r\nvar ChordUnit = require('./chord-unit');\r\nvar MelodyUnit = require('./melody-unit');\r\n\r\nvar AutoComposerData = require('./autocomposer-data');\r\nvar AcData = new AutoComposerData.AutoComposerData();\r\n\r\n/**\r\n * Creates melodies from a given chord progression\r\n */\r\nclass AutoComposerMelody {\r\n  /**\r\n  * @param {string[]} chordProgression - array of chord symbols\r\n  * @param {string} lowerLimit - lower boundary note (in scientific notation)\r\n  * @param {string} upperLimit - upper boundary note (in scientific notation)\r\n  */\r\n  constructor(chordProgression, lowerLimit, upperLimit) {\r\n    /** @type {string[]} */\r\n    this.chordProgression = chordProgression || AcData.INITIAL_PROGRESSION,\r\n    /** @type {string} */\r\n    this.lowerLimit = lowerLimit || AcData.DEFAULT_LOWER_LIMIT,\r\n    /** @type {string} */\r\n    this.upperLimit = upperLimit || AcData.DEFAULT_UPPER_LIMIT\r\n  }\r\n\r\n    /**\r\n    * For a given note, find its lowest instance in the specified range.\r\n    * @private\r\n    * @param {string} note - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    */\r\n  getLowestNoteInRange(note, upperLimit, lowerLimit) {\r\n    return [];\r\n  }\r\n\r\n    /**\r\n    * For a given chord, get all the chord tones between the upper and lower limits.\r\n    * @private\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} lowerLimit - note (written in scientific notation)\r\n    * @param {string} upperLimit - note (written in scientific notation)\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    */\r\n  getAllChordTones(chord, lowerLimit, upperLimit) {\r\n    var chordTones = tonal.chord(chord);\r\n    var chordTonesInRange = tonal.range.pitchSet(chordTones, [lowerLimit, upperLimit]);\r\n\r\n    for(var i = 0; i < chordTonesInRange.length; i++) {\r\n      for(var j = 0; j < chordTones.length; j++) {\r\n        // Fixing pesky issue where D7 was returned as \"D Gb A C\" instead of \"D F# A C\"\r\n        // If the current chord tone is enharmonic with the note from the pitch set,\r\n        // Override it with the chord tone.\r\n        if(tonal.note.pc(chordTonesInRange[i]) != chordTones[j]\r\n          && tonal.note.enharmonics(chordTones[j]).indexOf(tonal.note.pc(chordTonesInRange[i])) > -1) {\r\n          chordTonesInRange[i] = chordTones[j] + tonal.note.oct(chordTonesInRange[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return chordTonesInRange;\r\n  }\r\n\r\n    /**\r\n    * For a given chord symbol, creates a ChordUnit object\r\n    * @private\r\n    * @param {string} chord - chord symbol\r\n    * @param {string} lowerLimit - note (in scientific notation)\r\n    * @param {string} upperLimit - note (in scientific notation)\r\n    * @return {ChordUnit}\r\n    */\r\n  buildChordUnit(chord, lowerLimit, upperLimit) {\r\n    var chordTonesInRange = this.getAllChordTones(chord, lowerLimit, upperLimit);\r\n    var chordUnit = new ChordUnit.ChordUnit(chord, chordTonesInRange, null);\r\n    return chordUnit;\r\n  }\r\n\r\n    /**\r\n    * For a given melody, creates a MelodyUnit object\r\n    * @private\r\n    * @param {string[]} chordProgression - a chord progression\r\n    * @param {string} melodyString - a melody (in scientific notation)\r\n    * @return {MelodyUnit}\r\n    */\r\n  buildMelodyUnit(chordProgression, melodyString) {\r\n    var arrMelody = melodyString.split(\" \");\r\n    var melodyUnit = new MelodyUnit.MelodyUnit(chordProgression, arrMelody);\r\n    return melodyUnit;\r\n  }\r\n\r\n    /**\r\n    * For a given chord progression, generate a series of melodies that fit over the progression\r\n    * @private\r\n    * @param {string[]} chordProgression - chord symbols\r\n    * @param {string} lowerLimit - lower limit (in scientific notation). Optional value.\r\n    * @param {string} upperLimit - upper limit (in scientific notation). Optional value.\r\n    * @return {ChordUnit[]} - a list of ChordUnit objects.\r\n    */\r\n  buildChordUnitList(chordProgression, lowerLimit, upperLimit) {\r\n    if(lowerLimit == null) {\r\n      lowerLimit = this.lowerLimit;\r\n    }\r\n    if(upperLimit == null) {\r\n      upperLimit = this.upperLimit;\r\n    }\r\n\r\n    var chordUnitList = [];\r\n    var chordTonesInRange;\r\n\r\n    for(var i = chordProgression.length - 1; i >= 0; i--) {\r\n      chordTonesInRange = this.getAllChordTones(chordProgression[i], lowerLimit, upperLimit);\r\n\r\n      if(i === chordProgression.length) {\r\n        chordUnitList[i] = new ChordUnit.ChordUnit(chordProgression[i], chordTonesInRange, null);\r\n      } else {\r\n        chordUnitList[i] = new ChordUnit.ChordUnit(chordProgression[i], chordTonesInRange, chordUnitList[i + 1]);\r\n      }\r\n    }\r\n\r\n    return chordUnitList;\r\n  }\r\n\r\n    /**\r\n    * Recursive function that adds new notes to the previous notes passed into it.\r\n    * On the first call of this function, melodyList should be null.\r\n    * @private\r\n    * @param {ChordUnit} chordUnit - the ChordUnit for the next chord\r\n    * @param {?string[]} melodyList - list of existing melodies\r\n    * @param {Object} options - if true, generated melodies will be filtered\r\n    * @param {boolean} options.filtered - if true, generated melodies will be filtered\r\n    * @param {boolean} options.rawOutput - if true, generated melodies will be given as strings\r\n    * @return {string[]} - a list of melodies. Each element is a string represeting a melody. Each melody string is written as a series of pitches delimited by a space.\r\n    */\r\n  getMelodiesCore(chordUnit, melodyList, options) {\r\n    var returnList = [];\r\n    var chordTones = chordUnit.chordTones;\r\n    var rawMelody, newMelody;\r\n    var haxThis = this;\r\n\r\n    if(melodyList) {\r\n      // We're somewhere along the middle of the chain.\r\n      melodyList.forEach(function(currentMelody) {\r\n        chordTones.forEach(function(currentChordTone) {\r\n          newMelody = currentMelody + \" \" + currentChordTone;\r\n\r\n          if(options.filtered) {\r\n            if(AcData.filterMelodyRange(newMelody)) {\r\n              returnList.push(newMelody);\r\n            }\r\n          } else {\r\n            returnList.push(newMelody);\r\n          }\r\n\r\n        });\r\n      });\r\n    } else {\r\n      // This is the beginning of the chain.\r\n      melodyList = chordUnit.chordTones;\r\n      returnList.push.apply(returnList, melodyList);\r\n    }\r\n\r\n    if(chordUnit.nextChordUnit) {\r\n      // We're somewhere along the middle of the chain.\r\n      return this.getMelodiesCore(chordUnit.nextChordUnit, returnList, options);\r\n    } else {\r\n      // End of the chain.\r\n      return returnList;\r\n    }\r\n  }\r\n\r\n    /**\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - chord progression given by user\r\n    * @return {MelodyUnit[]} - an array of notes (written in scientific pitch)\r\n    */\r\n  getAllMelodies(chordProgression) {\r\n    var chordUnitList = this.buildChordUnitList(chordProgression, this.lowerLimit, this.upperLimit);\r\n    var melodies = this.getMelodiesCore(chordUnitList[0], null, {filtered: false});\r\n\r\n    var melodyUnits = [];\r\n    var haxThis = this;\r\n    melodies.forEach(function(rawMelody) {\r\n      melodyUnits.push(haxThis.buildMelodyUnit(chordProgression, rawMelody));\r\n    });\r\n\r\n    return melodyUnits;\r\n  }\r\n\r\n    /**\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - chord progression given by user\r\n    * @return {string[]} - an array of notes (written in scientific pitch)\r\n    */\r\n  getRawMelodies(chordProgression) {\r\n    var chordUnitList = this.buildChordUnitList(chordProgression, this.lowerLimit, this.upperLimit);\r\n    var melodies = this.getMelodiesCore(chordUnitList[0], null, {filtered: true, rawOutput: true});\r\n\r\n    return melodies;\r\n  }\r\n\r\n    /**\r\n    * For a given chord progression, generate a series of melodies that fit over the progression.\r\n    * @param {string[]} chordProgression - chord progression given by user\r\n    * @return {MelodyUnit[]} - an array of MelodyUnits\r\n    */\r\n  getMelodies(chordProgression) {\r\n    var chordUnitList = this.buildChordUnitList(chordProgression, this.lowerLimit, this.upperLimit);\r\n    var melodies = this.getMelodiesCore(chordUnitList[0], null, {filtered: true});\r\n\r\n    var melodyUnits = [];\r\n    var haxThis = this;\r\n    melodies.forEach(function(rawMelody) {\r\n      melodyUnits.push(haxThis.buildMelodyUnit(chordProgression, rawMelody));\r\n    });\r\n\r\n    return melodyUnits;\r\n  }\r\n\r\n};\r\n\r\nexports.AutoComposerMelody = AutoComposerMelody;\r\n",
    "static": true,
    "longname": "src/autocomposer-melody.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "tonal",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~tonal",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "ChordUnit",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~ChordUnit",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "MelodyUnit",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~MelodyUnit",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "AutoComposerData",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~AutoComposerData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "AcData",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~AcData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "AutoComposerMelody",
    "memberof": "src/autocomposer-melody.js",
    "static": true,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/autocomposer-melody.js",
    "importStyle": "{AutoComposerMelody}",
    "description": "Creates melodies from a given chord progression",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 69,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#constructor",
    "access": null,
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "array of chord symbols"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerLimit",
        "description": "lower boundary note (in scientific notation)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upperLimit",
        "description": "upper boundary note (in scientific notation)"
      }
    ]
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "getLowestNoteInRange",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getLowestNoteInRange",
    "access": "private",
    "description": "For a given note, find its lowest instance in the specified range.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "note",
        "description": "note (written in scientific notation)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upperLimit",
        "description": "note (written in scientific notation)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerLimit",
        "description": "note (written in scientific notation)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "an array of notes (written in scientific pitch)"
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "getAllChordTones",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getAllChordTones",
    "access": "private",
    "description": "For a given chord, get all the chord tones between the upper and lower limits.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chord",
        "description": "chord symbol"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerLimit",
        "description": "note (written in scientific notation)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upperLimit",
        "description": "note (written in scientific notation)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "an array of notes (written in scientific pitch)"
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "buildChordUnit",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#buildChordUnit",
    "access": "private",
    "description": "For a given chord symbol, creates a ChordUnit object",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chord",
        "description": "chord symbol"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerLimit",
        "description": "note (in scientific notation)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upperLimit",
        "description": "note (in scientific notation)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChordUnit"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "buildMelodyUnit",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#buildMelodyUnit",
    "access": "private",
    "description": "For a given melody, creates a MelodyUnit object",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "a chord progression"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "melodyString",
        "description": "a melody (in scientific notation)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MelodyUnit"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "buildChordUnitList",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#buildChordUnitList",
    "access": "private",
    "description": "For a given chord progression, generate a series of melodies that fit over the progression",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "chord symbols"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lowerLimit",
        "description": "lower limit (in scientific notation). Optional value."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "upperLimit",
        "description": "upper limit (in scientific notation). Optional value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ChordUnit[]"
      ],
      "spread": false,
      "description": "a list of ChordUnit objects."
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getMelodiesCore",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getMelodiesCore",
    "access": "private",
    "description": "Recursive function that adds new notes to the previous notes passed into it.\nOn the first call of this function, melodyList should be null.",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "ChordUnit"
        ],
        "spread": false,
        "optional": false,
        "name": "chordUnit",
        "description": "the ChordUnit for the next chord"
      },
      {
        "nullable": true,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "melodyList",
        "description": "list of existing melodies"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "if true, generated melodies will be filtered"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.filtered",
        "description": "if true, generated melodies will be filtered"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.rawOutput",
        "description": "if true, generated melodies will be given as strings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "a list of melodies. Each element is a string represeting a melody. Each melody string is written as a series of pitches delimited by a space."
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getAllMelodies",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getAllMelodies",
    "access": null,
    "description": "For a given chord progression, generate a series of melodies that fit over the progression.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "chord progression given by user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MelodyUnit[]"
      ],
      "spread": false,
      "description": "an array of notes (written in scientific pitch)"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "getRawMelodies",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getRawMelodies",
    "access": null,
    "description": "For a given chord progression, generate a series of melodies that fit over the progression.",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "chord progression given by user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "an array of notes (written in scientific pitch)"
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "getMelodies",
    "memberof": "src/autocomposer-melody.js~AutoComposerMelody",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-melody.js~AutoComposerMelody#getMelodies",
    "access": null,
    "description": "For a given chord progression, generate a series of melodies that fit over the progression.",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "chord progression given by user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MelodyUnit[]"
      ],
      "spread": false,
      "description": "an array of MelodyUnits"
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/autocomposer-parser.js",
    "content": "var chord = require('tonal-chord');\r\nvar note = require('tonal-note');\r\n\r\n/**\r\n * Determines if user input represents a valid note/chord.\r\n * Also handles conversions between proper accidental signs and ASCII accidentals like \"b\" or \"#\".\r\n */\r\nclass AutoComposerParser {\r\n  /**\r\n  * Plain constructor.\r\n  */\r\n  constructor() {\r\n      //\r\n  }\r\n    /**\r\n    * Parses text, and determines if user input represents a valid note/chord.\r\n    * @param {string} input - value given by the user\r\n    * @return {boolean} - a true value means the string can be used by the rest of the program.\r\n    */\r\n  isValidText(input) {\r\n    var isChord = chord.isKnownChord(input) ? true : false;\r\n    var isNote = note.name(input) ? true : false;\r\n\r\n    return isChord || isNote;\r\n  }\r\n\r\n    /**\r\n    * Converts ASCII accidentals to Unicode accidentals in HTML\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals in HTML\r\n    */\r\n  convertAsciiAccidentalsToHtml(input) {\r\n    var out = input.replace(/([A-G0-9])b/g, '$1&#9837;');\r\n    out = out.replace(/([A-G0-9])#/g, '$1&#9839;');\r\n    out = out.replace(/([A-G0-9])o/g, '$1&‌deg;');\r\n\r\n    return out;\r\n  }\r\n\r\n    /**\r\n    * Converts ASCII accidentals to Unicode accidentals\r\n    * @param {string} input - text with ASCII accidentals\r\n    * @return {string} - text with Unicode accidentals\r\n    */\r\n  convertAsciiAccidentalsToText(input) {\r\n    var out = input.replace(/([A-G0-9])b/g, '$1♭');\r\n    out = out.replace(/([A-G0-9])#/g, '$1♯');\r\n    out = out.replace(/([A-G0-9])o/g, '$1°');\r\n\r\n    return out;\r\n  }\r\n\r\n    /**\r\n    * Converts Unicode accidentals to ASCII\r\n    * @param {string} input - text with Unicode accidentals\r\n    * @return {string} - text with ASCII accidentals\r\n    */\r\n  convertAccidentalsToAscii(input) {\r\n    var out = input.replace(/([A-G0-9])♭/g, '$1b');\r\n    out = out.replace(/([A-G0-9])♯/g, '$1#');\r\n    out = out.replace(/([A-G0-9])°/g, '$1o');\r\n\r\n    return out;\r\n  }\r\n}\r\n\r\nexports.AutoComposerParser = AutoComposerParser;\r\n",
    "static": true,
    "longname": "src/autocomposer-parser.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "chord",
    "memberof": "src/autocomposer-parser.js",
    "static": true,
    "longname": "src/autocomposer-parser.js~chord",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "note",
    "memberof": "src/autocomposer-parser.js",
    "static": true,
    "longname": "src/autocomposer-parser.js~note",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/autocomposer-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "AutoComposerParser",
    "memberof": "src/autocomposer-parser.js",
    "static": true,
    "longname": "src/autocomposer-parser.js~AutoComposerParser",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/autocomposer-parser.js",
    "importStyle": "{AutoComposerParser}",
    "description": "Determines if user input represents a valid note/chord.\nAlso handles conversions between proper accidental signs and ASCII accidentals like \"b\" or \"#\".",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/autocomposer-parser.js~AutoComposerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-parser.js~AutoComposerParser#constructor",
    "access": null,
    "description": "Plain constructor.",
    "lineNumber": 12,
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "isValidText",
    "memberof": "src/autocomposer-parser.js~AutoComposerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-parser.js~AutoComposerParser#isValidText",
    "access": null,
    "description": "Parses text, and determines if user input represents a valid note/chord.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "value given by the user"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "a true value means the string can be used by the rest of the program."
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "convertAsciiAccidentalsToHtml",
    "memberof": "src/autocomposer-parser.js~AutoComposerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-parser.js~AutoComposerParser#convertAsciiAccidentalsToHtml",
    "access": null,
    "description": "Converts ASCII accidentals to Unicode accidentals in HTML",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "text with ASCII accidentals"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "text with Unicode accidentals in HTML"
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "convertAsciiAccidentalsToText",
    "memberof": "src/autocomposer-parser.js~AutoComposerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-parser.js~AutoComposerParser#convertAsciiAccidentalsToText",
    "access": null,
    "description": "Converts ASCII accidentals to Unicode accidentals",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "text with ASCII accidentals"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "text with Unicode accidentals"
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "convertAccidentalsToAscii",
    "memberof": "src/autocomposer-parser.js~AutoComposerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/autocomposer-parser.js~AutoComposerParser#convertAccidentalsToAscii",
    "access": null,
    "description": "Converts Unicode accidentals to ASCII",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "text with Unicode accidentals"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "text with ASCII accidentals"
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/chord-unit.js",
    "content": "var AcData = require('../src/autocomposer-data');\r\nvar AutoComposerData = new AcData.AutoComposerData();\r\n\r\n/**\r\n * Represents some data built around a specific chord.\r\n * Has a reference to the next ChordUnit in the progression, and the chord tones that will be used in melody generation.\r\n */\r\nclass ChordUnit {\r\n    /**\r\n    * @param {string} chord - chord symbol\r\n    * @param {string[]} chordTones - array of notes in the melody\r\n    * @param {ChordUnit} nextChordUnit - next ChordUnit in the chain\r\n    */\r\n  constructor(chord, chordTones, nextChordUnit) {\r\n    /** @type {string} */\r\n    this.chord = chord;\r\n    /** @type {string[]} */\r\n    this.chordTones = chordTones;\r\n    /** @type {ChordUnit} */\r\n    this.nextChordUnit = nextChordUnit;\r\n  }\r\n\r\n    /**\r\n    * @param {ChordUnit} next - the next ChordUnit in the chain.\r\n    */\r\n  setNextChordUnit(next) {\r\n    this.nextChordUnit(next);\r\n  }\r\n}\r\n\r\nexports.ChordUnit = ChordUnit;\r\n",
    "static": true,
    "longname": "src/chord-unit.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "AcData",
    "memberof": "src/chord-unit.js",
    "static": true,
    "longname": "src/chord-unit.js~AcData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/chord-unit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "AutoComposerData",
    "memberof": "src/chord-unit.js",
    "static": true,
    "longname": "src/chord-unit.js~AutoComposerData",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/chord-unit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "ChordUnit",
    "memberof": "src/chord-unit.js",
    "static": true,
    "longname": "src/chord-unit.js~ChordUnit",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/chord-unit.js",
    "importStyle": "{ChordUnit}",
    "description": "Represents some data built around a specific chord.\nHas a reference to the next ChordUnit in the progression, and the chord tones that will be used in melody generation.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/chord-unit.js~ChordUnit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chord-unit.js~ChordUnit#constructor",
    "access": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chord",
        "description": "chord symbol"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordTones",
        "description": "array of notes in the melody"
      },
      {
        "nullable": null,
        "types": [
          "ChordUnit"
        ],
        "spread": false,
        "optional": false,
        "name": "nextChordUnit",
        "description": "next ChordUnit in the chain"
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "chord",
    "memberof": "src/chord-unit.js~ChordUnit",
    "static": false,
    "longname": "src/chord-unit.js~ChordUnit#chord",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "chordTones",
    "memberof": "src/chord-unit.js~ChordUnit",
    "static": false,
    "longname": "src/chord-unit.js~ChordUnit#chordTones",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "nextChordUnit",
    "memberof": "src/chord-unit.js~ChordUnit",
    "static": false,
    "longname": "src/chord-unit.js~ChordUnit#nextChordUnit",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "ChordUnit"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "setNextChordUnit",
    "memberof": "src/chord-unit.js~ChordUnit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/chord-unit.js~ChordUnit#setNextChordUnit",
    "access": null,
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "ChordUnit"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "the next ChordUnit in the chain."
      }
    ]
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/melody-unit.js",
    "content": "var range = require('tonal-range')\r\n\r\n/**\r\n * Represents a melody and associated metadata.\r\n */\r\nclass MelodyUnit {\r\n    /**\r\n    * @param {string[]} chordProgression - array of chord symbols\r\n    * @param {string[]} melodyNotes - array of notes in the melody\r\n    */\r\n  constructor(chordProgression, melodyNotes) {\r\n  \t/** @type {string[]} */\r\n    this.chordProgression = chordProgression;\r\n    /** @type {string[]} */\r\n    this.melodyNotes = melodyNotes;\r\n    /** @type {number} */\r\n    this.smoothness = this.getSmoothness();\r\n    /** @type {number} */\r\n    this.range = this.getRange();\r\n    /** @type {string} */\r\n    this.contour = \"\";\r\n  }\r\n\r\n    /**\r\n    * Calculates the range of this melody.\r\n    * @private\r\n    * @return {number} - Range of the melody (in semitones)\r\n    */\r\n  getRange() {\r\n    var totalRange = range.numeric(this.melodyNotes);\r\n    var highest = Math.max.apply(null, totalRange);\r\n    var lowest = Math.min.apply(null, totalRange);\r\n\r\n    return highest - lowest;\r\n  }\r\n\r\n    /**\r\n    * Calculates the smoothness of this melody.\r\n    * @private\r\n    * @return {number} - Range of the melody (in semitones)\r\n    */\r\n  getSmoothness() {\r\n    var totalSmoothness = 0;\r\n    var subset, subRange, highest, lowest, distance;\r\n\r\n    for(var i = 2; i <= this.melodyNotes.length; i++) {\r\n      subset = this.melodyNotes.slice(i - 2, i);\r\n      subRange = range.numeric(subset);\r\n      highest = Math.max.apply(null, subRange);\r\n      lowest = Math.min.apply(null, subRange);\r\n      distance = highest - lowest;\r\n      totalSmoothness += distance;\r\n    }\r\n\r\n    return totalSmoothness;\r\n  }\r\n\r\n}\r\n\r\nexports.MelodyUnit = MelodyUnit;\r\n",
    "static": true,
    "longname": "src/melody-unit.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "range",
    "memberof": "src/melody-unit.js",
    "static": true,
    "longname": "src/melody-unit.js~range",
    "access": null,
    "export": false,
    "importPath": "autocomposer-melody/src/melody-unit.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "MelodyUnit",
    "memberof": "src/melody-unit.js",
    "static": true,
    "longname": "src/melody-unit.js~MelodyUnit",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/melody-unit.js",
    "importStyle": "{MelodyUnit}",
    "description": "Represents a melody and associated metadata.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chordProgression",
        "description": "array of chord symbols"
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "melodyNotes",
        "description": "array of notes in the melody"
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "chordProgression",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#chordProgression",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "melodyNotes",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#melodyNotes",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "smoothness",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#smoothness",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "range",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#range",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "contour",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#contour",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "getRange",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#getRange",
    "access": "private",
    "description": "Calculates the range of this melody.",
    "lineNumber": 29,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Range of the melody (in semitones)"
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "getSmoothness",
    "memberof": "src/melody-unit.js~MelodyUnit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/melody-unit.js~MelodyUnit#getSmoothness",
    "access": "private",
    "description": "Calculates the smoothness of this melody.",
    "lineNumber": 42,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Range of the melody (in semitones)"
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/score-writer.js",
    "content": "/**\r\n * Class responsible for rendering musical data as a score.\r\n */\r\nclass ScoreWriter {\r\n  /**\r\n  * Plain constructor.\r\n  */\r\n  constructor() {\r\n\r\n  }\r\n\r\n    /**\r\n    * Renders musical data as a score.\r\n    * @param {string} targetElement - selector for the element which will hold score data.\r\n    * @param {MelodyUnit} melodyUnit - MelodyUnit which has all of the melody data.\r\n    */\r\n  writeScore(targetElement, melodyUnit) {\r\n    //\r\n  }\r\n}\r\n\r\nexports.ScoreWriter = ScoreWriter;\r\n",
    "static": true,
    "longname": "src/score-writer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "class",
    "name": "ScoreWriter",
    "memberof": "src/score-writer.js",
    "static": true,
    "longname": "src/score-writer.js~ScoreWriter",
    "access": null,
    "export": true,
    "importPath": "autocomposer-melody/src/score-writer.js",
    "importStyle": "{ScoreWriter}",
    "description": "Class responsible for rendering musical data as a score.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 110,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/score-writer.js~ScoreWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/score-writer.js~ScoreWriter#constructor",
    "access": null,
    "description": "Plain constructor.",
    "lineNumber": 8,
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "writeScore",
    "memberof": "src/score-writer.js~ScoreWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/score-writer.js~ScoreWriter#writeScore",
    "access": null,
    "description": "Renders musical data as a score.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetElement",
        "description": "selector for the element which will hold score data."
      },
      {
        "nullable": null,
        "types": [
          "MelodyUnit"
        ],
        "spread": false,
        "optional": false,
        "name": "melodyUnit",
        "description": "MelodyUnit which has all of the melody data."
      }
    ]
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "testFile",
    "name": "test/autocomposer-data.js",
    "content": "var assert = require('assert');\r\n\r\nvar AcData = require('../src/autocomposer-data');\r\nvar AutoComposerData = new AcData.AutoComposerData();\r\n\r\ndescribe('AutoComposerData', function() {\r\n  describe('#filterMelodyRange', function() {\r\n    it('should filter out melodies that have a range larger than an octave', function() {\r\n      melodySmallRange = \"C4 G4 A4\";\r\n      melodyOctaveRange = \"C4 G4 C5\";\r\n      melodyBigRange = \"C4 G4 D5\";\r\n\r\n      assert.equal(AutoComposerData.filterMelodyRange(melodySmallRange), true);\r\n      assert.equal(AutoComposerData.filterMelodyRange(melodyOctaveRange), true);\r\n      assert.equal(AutoComposerData.filterMelodyRange(melodyBigRange), false);\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "test/autocomposer-data.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/autocomposer-data.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/autocomposer-data.js~describe0",
    "access": null,
    "description": "AutoComposerData",
    "lineNumber": 6
  },
  {
    "__docId__": 171,
    "kind": "testDescribe",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/autocomposer-data.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-data.js~describe0.describe1",
    "access": null,
    "description": "#filterMelodyRange",
    "lineNumber": 7
  },
  {
    "__docId__": 172,
    "kind": "testIt",
    "name": "it2",
    "testId": 2,
    "memberof": "test/autocomposer-data.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-data.js~describe0.describe1.it2",
    "access": null,
    "description": "should filter out melodies that have a range larger than an octave",
    "lineNumber": 8
  },
  {
    "__docId__": 173,
    "kind": "testFile",
    "name": "test/autocomposer-melody.js",
    "content": "var assert = require('assert');\r\nconst _ = require('underscore');\r\n\r\nvar AcMelody = require('../src/autocomposer-melody');\r\nvar AutoComposerMelody = new AcMelody.AutoComposerMelody();\r\n\r\nvar TEST_CHORD_1 = \"Gm7\";\r\nvar TEST_CHORD_2 = \"Cm7\";\r\nvar TEST_CHORD_3 = \"D7\";\r\n\r\nvar TEST_LOWER_LIMIT_1 = \"Bb3\";\r\nvar TEST_UPPER_LIMIT_1 = \"G#4\";\r\n\r\nvar TEST_LOWER_LIMIT_2 = \"Ab4\";\r\nvar TEST_UPPER_LIMIT_2 = \"B5\";\r\n\r\ndescribe('AutoComposerMelody', function() {\r\n  describe('#getAllChordTones', function() {\r\n    it('should return all chord tones in the range (inclusive)', function() {\r\n      expectedTones1 = [\"Bb3\", \"D4\", \"F4\", \"G4\"];\r\n      expectedTones2 = [\"A4\", \"C5\", \"D5\", \"F#5\", \"A5\"];\r\n\r\n      resultTones1 = AutoComposerMelody.getAllChordTones(TEST_CHORD_1, TEST_LOWER_LIMIT_1, TEST_UPPER_LIMIT_1);\r\n      resultTones2 = AutoComposerMelody.getAllChordTones(TEST_CHORD_3, TEST_LOWER_LIMIT_2, TEST_UPPER_LIMIT_2);\r\n\r\n      assert.deepEqual(resultTones1, expectedTones1);\r\n      assert.deepEqual(resultTones2, expectedTones2);\r\n    });\r\n  });\r\n\r\n  describe('#buildChordUnitList', function() {\r\n    it('should return a list of ChordUnits for a given progression', function() {\r\n      var expChordUnit3 = {\r\n        chord: \"D7\",\r\n        chordTones: [\"A4\", \"C5\", \"D5\", \"F#5\", \"A5\"],\r\n      };\r\n      var expChordUnit2 = {\r\n        chord: \"Cm7\",\r\n        chordTones: [\"Bb4\", \"C5\", \"Eb5\", \"G5\", \"Bb5\"],\r\n      };\r\n      var expChordUnit1 = {\r\n        chord: \"Gm7\",\r\n        chordTones: [\"Bb4\", \"D5\", \"F5\", \"G5\", \"Bb5\"],\r\n      };\r\n\r\n      var expectedArray = [expChordUnit1, expChordUnit2, expChordUnit3];\r\n      var chordProgression = [\"Gm7\",\"Cm7\",\"D7\"];\r\n      var chordUnitList = AutoComposerMelody.buildChordUnitList(chordProgression, TEST_LOWER_LIMIT_2, TEST_UPPER_LIMIT_2);\r\n\r\n      assert.deepEqual(chordUnitList[0].chordTones, expectedArray[0].chordTones);\r\n      assert.deepEqual(chordUnitList[1].chordTones, expectedArray[1].chordTones);\r\n      assert.deepEqual(chordUnitList[2].chordTones, expectedArray[2].chordTones);\r\n    });\r\n  });\r\n\r\n  describe('#buildMelodyUnit', function() {\r\n    it('should build a melody unit with metadata for each raw melody', function() {\r\n      var chordProgression = [\"G\", \"Em\", \"C\", \"D\"];\r\n      var melody1 = \"B3 G4 E4 F#4\";\r\n      var melody2 = \"G4 B4 C5 D5\";\r\n\r\n      exp1 = {\r\n        chordProgression: chordProgression,\r\n        melodyNotes: melody1.split(\" \"),\r\n        smoothness: 13,\r\n        range: 8,\r\n        contour: \"\"\r\n      }\r\n\r\n      exp2 = {\r\n        chordProgression: chordProgression,\r\n        melodyNotes: melody2.split(\" \"),\r\n        smoothness: 7,\r\n        range: 7,\r\n        contour: \"\"\r\n      }\r\n\r\n      result1 = AutoComposerMelody.buildMelodyUnit(chordProgression, melody1);\r\n      result2 = AutoComposerMelody.buildMelodyUnit(chordProgression, melody2);\r\n\r\n      assert.deepEqual(result1, exp1);\r\n      assert.deepEqual(result2, exp2);\r\n    });\r\n  });\r\n\r\n  describe('#getMelodies', function() {\r\n    it('should return a list of melodies for a given progression', function() {\r\n      var chordProgression = [\"Gm\",\"Cm\",\"D\"];\r\n      var melodyList = AutoComposerMelody.getAllMelodies(chordProgression);\r\n\r\n      assert.equal(melodyList.length, 252);\r\n      assert.equal(typeof melodyList[0] === 'string', false);\r\n    });\r\n\r\n    it('should return less melodies if filters are on', function() {\r\n      var chordProgression = [\"Gm\",\"Cm\",\"D\"];\r\n      var melodyList = AutoComposerMelody.getMelodies(chordProgression);\r\n\r\n      assert.equal(melodyList.length, 123);\r\n      assert.equal(typeof melodyList[0] === 'string', false);\r\n    });\r\n\r\n    it('should return raw melodies as a string array', function() {\r\n      var chordProgression = [\"Gm\",\"Cm\",\"D\"];\r\n      var melodyList = AutoComposerMelody.getRawMelodies(chordProgression);\r\n\r\n      assert.equal(typeof melodyList[0] === 'string', true);\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "test/autocomposer-melody.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "testDescribe",
    "name": "describe3",
    "testId": 3,
    "memberof": "test/autocomposer-melody.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3",
    "access": null,
    "description": "AutoComposerMelody",
    "lineNumber": 17
  },
  {
    "__docId__": 175,
    "kind": "testDescribe",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/autocomposer-melody.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe4",
    "access": null,
    "description": "#getAllChordTones",
    "lineNumber": 18
  },
  {
    "__docId__": 176,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/autocomposer-melody.js~describe3.describe4",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe4.it5",
    "access": null,
    "description": "should return all chord tones in the range (inclusive)",
    "lineNumber": 19
  },
  {
    "__docId__": 177,
    "kind": "testDescribe",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/autocomposer-melody.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe6",
    "access": null,
    "description": "#buildChordUnitList",
    "lineNumber": 31
  },
  {
    "__docId__": 178,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/autocomposer-melody.js~describe3.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe6.it7",
    "access": null,
    "description": "should return a list of ChordUnits for a given progression",
    "lineNumber": 32
  },
  {
    "__docId__": 179,
    "kind": "testDescribe",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/autocomposer-melody.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe8",
    "access": null,
    "description": "#buildMelodyUnit",
    "lineNumber": 56
  },
  {
    "__docId__": 180,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/autocomposer-melody.js~describe3.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe8.it9",
    "access": null,
    "description": "should build a melody unit with metadata for each raw melody",
    "lineNumber": 57
  },
  {
    "__docId__": 181,
    "kind": "testDescribe",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/autocomposer-melody.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe10",
    "access": null,
    "description": "#getMelodies",
    "lineNumber": 86
  },
  {
    "__docId__": 182,
    "kind": "testIt",
    "name": "it11",
    "testId": 11,
    "memberof": "test/autocomposer-melody.js~describe3.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe10.it11",
    "access": null,
    "description": "should return a list of melodies for a given progression",
    "lineNumber": 87
  },
  {
    "__docId__": 183,
    "kind": "testIt",
    "name": "it12",
    "testId": 12,
    "memberof": "test/autocomposer-melody.js~describe3.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe10.it12",
    "access": null,
    "description": "should return less melodies if filters are on",
    "lineNumber": 95
  },
  {
    "__docId__": 184,
    "kind": "testIt",
    "name": "it13",
    "testId": 13,
    "memberof": "test/autocomposer-melody.js~describe3.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-melody.js~describe3.describe10.it13",
    "access": null,
    "description": "should return raw melodies as a string array",
    "lineNumber": 103
  },
  {
    "__docId__": 185,
    "kind": "testFile",
    "name": "test/autocomposer-parser.js",
    "content": "var assert = require('assert');\r\n\r\nvar AcParser = require('../src/autocomposer-parser.js');\r\nvar AutoComposerParser = new AcParser.AutoComposerParser();\r\n\r\ndescribe('AutoComposerParser', function() {\r\n  describe('#isValidText', function() {\r\n    it('should return true for chord inputs', function() {\r\n      assert.equal(AutoComposerParser.isValidText('Gm7'), true);\r\n      assert.equal(AutoComposerParser.isValidText('C'), true);\r\n      assert.equal(AutoComposerParser.isValidText('D7'), true);\r\n      assert.equal(AutoComposerParser.isValidText('A#m7b5'), true);\r\n    });\r\n\r\n    it('should return false for non-chord inputs', function() {\r\n      assert.equal(AutoComposerParser.isValidText('H2'), false);\r\n      assert.equal(AutoComposerParser.isValidText('456456'), false);\r\n      assert.equal(AutoComposerParser.isValidText('Something really silly'), false);\r\n    });\r\n  });\r\n\r\n  describe('#convertAsciiAccidentalsToHtml', function() {\r\n    it('should convert ASCII accidentals to Unicode HTML entities', function() {\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToHtml('Bb'), 'B&#9837;');\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToHtml('C#'), 'C&#9839;');\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToHtml('Fo'), 'F&‌deg;');\r\n    });\r\n  });\r\n\r\n  describe('#convertAsciiAccidentalsToText', function() {\r\n    it('should convert ASCII accentals to Unicode versions', function() {\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToText('Bb'), 'B♭');\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToText('C#'), 'C♯');\r\n      assert.equal(AutoComposerParser.convertAsciiAccidentalsToText('Fo'), 'F°');\r\n    });\r\n  });\r\n\r\n  describe('#convertAccidentalsToAscii', function() {\r\n    it('should convert Unicode accentals to ASCII versions', function() {\r\n      assert.equal(AutoComposerParser.convertAccidentalsToAscii('B♭'), 'Bb');\r\n      assert.equal(AutoComposerParser.convertAccidentalsToAscii('C♯'), 'C#');\r\n      assert.equal(AutoComposerParser.convertAccidentalsToAscii('F°'), 'Fo');\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "test/autocomposer-parser.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "testDescribe",
    "name": "describe14",
    "testId": 14,
    "memberof": "test/autocomposer-parser.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14",
    "access": null,
    "description": "AutoComposerParser",
    "lineNumber": 6
  },
  {
    "__docId__": 187,
    "kind": "testDescribe",
    "name": "describe15",
    "testId": 15,
    "memberof": "test/autocomposer-parser.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe15",
    "access": null,
    "description": "#isValidText",
    "lineNumber": 7
  },
  {
    "__docId__": 188,
    "kind": "testIt",
    "name": "it16",
    "testId": 16,
    "memberof": "test/autocomposer-parser.js~describe14.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe15.it16",
    "access": null,
    "description": "should return true for chord inputs",
    "lineNumber": 8
  },
  {
    "__docId__": 189,
    "kind": "testIt",
    "name": "it17",
    "testId": 17,
    "memberof": "test/autocomposer-parser.js~describe14.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe15.it17",
    "access": null,
    "description": "should return false for non-chord inputs",
    "lineNumber": 15
  },
  {
    "__docId__": 190,
    "kind": "testDescribe",
    "name": "describe18",
    "testId": 18,
    "memberof": "test/autocomposer-parser.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe18",
    "access": null,
    "description": "#convertAsciiAccidentalsToHtml",
    "lineNumber": 22
  },
  {
    "__docId__": 191,
    "kind": "testIt",
    "name": "it19",
    "testId": 19,
    "memberof": "test/autocomposer-parser.js~describe14.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe18.it19",
    "access": null,
    "description": "should convert ASCII accidentals to Unicode HTML entities",
    "lineNumber": 23
  },
  {
    "__docId__": 192,
    "kind": "testDescribe",
    "name": "describe20",
    "testId": 20,
    "memberof": "test/autocomposer-parser.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe20",
    "access": null,
    "description": "#convertAsciiAccidentalsToText",
    "lineNumber": 30
  },
  {
    "__docId__": 193,
    "kind": "testIt",
    "name": "it21",
    "testId": 21,
    "memberof": "test/autocomposer-parser.js~describe14.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe20.it21",
    "access": null,
    "description": "should convert ASCII accentals to Unicode versions",
    "lineNumber": 31
  },
  {
    "__docId__": 194,
    "kind": "testDescribe",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/autocomposer-parser.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe22",
    "access": null,
    "description": "#convertAccidentalsToAscii",
    "lineNumber": 38
  },
  {
    "__docId__": 195,
    "kind": "testIt",
    "name": "it23",
    "testId": 23,
    "memberof": "test/autocomposer-parser.js~describe14.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/autocomposer-parser.js~describe14.describe22.it23",
    "access": null,
    "description": "should convert Unicode accentals to ASCII versions",
    "lineNumber": 39
  }
]